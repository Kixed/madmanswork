/*
 * Business Partner REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AbstractActorDTO;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * AuditDataDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:44:40.010+01:00")
public class AuditDataDTO {
  @SerializedName("changedOn")
  private OffsetDateTime changedOn = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("createdBy")
  private AbstractActorDTO createdBy = null;

  @SerializedName("changedBy")
  private AbstractActorDTO changedBy = null;

  public AuditDataDTO changedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
    return this;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

  public void setChangedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
  }

  public AuditDataDTO createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public AuditDataDTO createdBy(AbstractActorDTO createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public AbstractActorDTO getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(AbstractActorDTO createdBy) {
    this.createdBy = createdBy;
  }

  public AuditDataDTO changedBy(AbstractActorDTO changedBy) {
    this.changedBy = changedBy;
    return this;
  }

   /**
   * Get changedBy
   * @return changedBy
  **/
  @ApiModelProperty(value = "")
  public AbstractActorDTO getChangedBy() {
    return changedBy;
  }

  public void setChangedBy(AbstractActorDTO changedBy) {
    this.changedBy = changedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditDataDTO auditDataDTO = (AuditDataDTO) o;
    return Objects.equals(this.changedOn, auditDataDTO.changedOn) &&
        Objects.equals(this.createdOn, auditDataDTO.createdOn) &&
        Objects.equals(this.createdBy, auditDataDTO.createdBy) &&
        Objects.equals(this.changedBy, auditDataDTO.changedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedOn, createdOn, createdBy, changedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditDataDTO {\n");
    
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    changedBy: ").append(toIndentedString(changedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

