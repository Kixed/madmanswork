/*
 * CS Communicator REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * GetConfiguration request
 */
@ApiModel(description = "GetConfiguration request")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:06:01.588+01:00")
public class ChangeConfigurationExternalRequestDTO {
  @SerializedName("externalChargingStationId")
  private String externalChargingStationId = null;

  @SerializedName("configuration")
  private Map<String, String> _configuration = null;

  public ChangeConfigurationExternalRequestDTO externalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
    return this;
  }

   /**
   * External charging station ID
   * @return externalChargingStationId
  **/
  @ApiModelProperty(required = true, value = "External charging station ID")
  public String getExternalChargingStationId() {
    return externalChargingStationId;
  }

  public void setExternalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
  }

  public ChangeConfigurationExternalRequestDTO _configuration(Map<String, String> _configuration) {
    this._configuration = _configuration;
    return this;
  }

  public ChangeConfigurationExternalRequestDTO putConfigurationItem(String key, String _configurationItem) {
    if (this._configuration == null) {
      this._configuration = new HashMap<String, String>();
    }
    this._configuration.put(key, _configurationItem);
    return this;
  }

   /**
   * Configuration key
   * @return _configuration
  **/
  @ApiModelProperty(value = "Configuration key")
  public Map<String, String> getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(Map<String, String> _configuration) {
    this._configuration = _configuration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeConfigurationExternalRequestDTO changeConfigurationExternalRequestDTO = (ChangeConfigurationExternalRequestDTO) o;
    return Objects.equals(this.externalChargingStationId, changeConfigurationExternalRequestDTO.externalChargingStationId) &&
        Objects.equals(this._configuration, changeConfigurationExternalRequestDTO._configuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalChargingStationId, _configuration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeConfigurationExternalRequestDTO {\n");
    
    sb.append("    externalChargingStationId: ").append(toIndentedString(externalChargingStationId)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

