/*
 * CS Management CSO REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AdditionalInfoListDTO;
import io.swagger.client.model.AddressDTO;
import io.swagger.client.model.AvailabilityInfoDTO;
import io.swagger.client.model.LocationDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * ChargingStationDataListDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:08:37.674+01:00")
public class ChargingStationDataListDTO {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("altRemoteAddress")
  private String altRemoteAddress = null;

  @SerializedName("heartbeatInterval")
  private Integer heartbeatInterval = null;

  @SerializedName("connectionType")
  private String connectionType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("hotlinePhoneNumber")
  private String hotlinePhoneNumber = null;

  @SerializedName("installationDate")
  private LocalDate installationDate = null;

  @SerializedName("nextServiceDate")
  private LocalDate nextServiceDate = null;

  @SerializedName("availabilityInfo")
  private AvailabilityInfoDTO availabilityInfo = null;

  @SerializedName("address")
  private AddressDTO address = null;

  @SerializedName("stationLocation")
  private LocationDTO stationLocation = null;

  @SerializedName("entranceLocation")
  private LocationDTO entranceLocation = null;

  /**
   * Gets or Sets authenticationModes
   */
  @JsonAdapter(AuthenticationModesEnum.Adapter.class)
  public enum AuthenticationModesEnum {
    NFC_RFID_CLASSIC("NFC_RFID_CLASSIC"),
    
    NFC_RFID_DESFIRE("NFC_RFID_DESFIRE"),
    
    PNC("PNC"),
    
    REMOTE("REMOTE"),
    
    DIRECT_PAYMENT("DIRECT_PAYMENT");

    private String value;

    AuthenticationModesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationModesEnum fromValue(String text) {
      for (AuthenticationModesEnum b : AuthenticationModesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthenticationModesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationModesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationModesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthenticationModesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authenticationModes")
  private List<AuthenticationModesEnum> authenticationModes = null;

  /**
   * Gets or Sets paymentOptions
   */
  @JsonAdapter(PaymentOptionsEnum.Adapter.class)
  public enum PaymentOptionsEnum {
    NO_PAYMENT("NO_PAYMENT"),
    
    DIRECT("DIRECT"),
    
    CONTRACT("CONTRACT");

    private String value;

    PaymentOptionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentOptionsEnum fromValue(String text) {
      for (PaymentOptionsEnum b : PaymentOptionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PaymentOptionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentOptionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentOptionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentOptionsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("paymentOptions")
  private List<PaymentOptionsEnum> paymentOptions = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("isoIdentifier")
  private String isoIdentifier = null;

  @SerializedName("additionalInfo")
  private List<AdditionalInfoListDTO> additionalInfo = null;

  public ChargingStationDataListDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ChargingStationDataListDTO altRemoteAddress(String altRemoteAddress) {
    this.altRemoteAddress = altRemoteAddress;
    return this;
  }

   /**
   * Get altRemoteAddress
   * @return altRemoteAddress
  **/
  @ApiModelProperty(value = "")
  public String getAltRemoteAddress() {
    return altRemoteAddress;
  }

  public void setAltRemoteAddress(String altRemoteAddress) {
    this.altRemoteAddress = altRemoteAddress;
  }

  public ChargingStationDataListDTO heartbeatInterval(Integer heartbeatInterval) {
    this.heartbeatInterval = heartbeatInterval;
    return this;
  }

   /**
   * Get heartbeatInterval
   * @return heartbeatInterval
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getHeartbeatInterval() {
    return heartbeatInterval;
  }

  public void setHeartbeatInterval(Integer heartbeatInterval) {
    this.heartbeatInterval = heartbeatInterval;
  }

  public ChargingStationDataListDTO connectionType(String connectionType) {
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @ApiModelProperty(value = "")
  public String getConnectionType() {
    return connectionType;
  }

  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }

  public ChargingStationDataListDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChargingStationDataListDTO hotlinePhoneNumber(String hotlinePhoneNumber) {
    this.hotlinePhoneNumber = hotlinePhoneNumber;
    return this;
  }

   /**
   * Get hotlinePhoneNumber
   * @return hotlinePhoneNumber
  **/
  @ApiModelProperty(value = "")
  public String getHotlinePhoneNumber() {
    return hotlinePhoneNumber;
  }

  public void setHotlinePhoneNumber(String hotlinePhoneNumber) {
    this.hotlinePhoneNumber = hotlinePhoneNumber;
  }

  public ChargingStationDataListDTO installationDate(LocalDate installationDate) {
    this.installationDate = installationDate;
    return this;
  }

   /**
   * Get installationDate
   * @return installationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getInstallationDate() {
    return installationDate;
  }

  public void setInstallationDate(LocalDate installationDate) {
    this.installationDate = installationDate;
  }

  public ChargingStationDataListDTO nextServiceDate(LocalDate nextServiceDate) {
    this.nextServiceDate = nextServiceDate;
    return this;
  }

   /**
   * Get nextServiceDate
   * @return nextServiceDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getNextServiceDate() {
    return nextServiceDate;
  }

  public void setNextServiceDate(LocalDate nextServiceDate) {
    this.nextServiceDate = nextServiceDate;
  }

  public ChargingStationDataListDTO availabilityInfo(AvailabilityInfoDTO availabilityInfo) {
    this.availabilityInfo = availabilityInfo;
    return this;
  }

   /**
   * Get availabilityInfo
   * @return availabilityInfo
  **/
  @ApiModelProperty(required = true, value = "")
  public AvailabilityInfoDTO getAvailabilityInfo() {
    return availabilityInfo;
  }

  public void setAvailabilityInfo(AvailabilityInfoDTO availabilityInfo) {
    this.availabilityInfo = availabilityInfo;
  }

  public ChargingStationDataListDTO address(AddressDTO address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public AddressDTO getAddress() {
    return address;
  }

  public void setAddress(AddressDTO address) {
    this.address = address;
  }

  public ChargingStationDataListDTO stationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
    return this;
  }

   /**
   * Get stationLocation
   * @return stationLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getStationLocation() {
    return stationLocation;
  }

  public void setStationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
  }

  public ChargingStationDataListDTO entranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
    return this;
  }

   /**
   * Get entranceLocation
   * @return entranceLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getEntranceLocation() {
    return entranceLocation;
  }

  public void setEntranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
  }

  public ChargingStationDataListDTO authenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
    return this;
  }

  public ChargingStationDataListDTO addAuthenticationModesItem(AuthenticationModesEnum authenticationModesItem) {
    if (this.authenticationModes == null) {
      this.authenticationModes = new ArrayList<AuthenticationModesEnum>();
    }
    this.authenticationModes.add(authenticationModesItem);
    return this;
  }

   /**
   * Get authenticationModes
   * @return authenticationModes
  **/
  @ApiModelProperty(value = "")
  public List<AuthenticationModesEnum> getAuthenticationModes() {
    return authenticationModes;
  }

  public void setAuthenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
  }

  public ChargingStationDataListDTO paymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
    return this;
  }

  public ChargingStationDataListDTO addPaymentOptionsItem(PaymentOptionsEnum paymentOptionsItem) {
    if (this.paymentOptions == null) {
      this.paymentOptions = new ArrayList<PaymentOptionsEnum>();
    }
    this.paymentOptions.add(paymentOptionsItem);
    return this;
  }

   /**
   * Get paymentOptions
   * @return paymentOptions
  **/
  @ApiModelProperty(value = "")
  public List<PaymentOptionsEnum> getPaymentOptions() {
    return paymentOptions;
  }

  public void setPaymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
  }

  public ChargingStationDataListDTO createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public ChargingStationDataListDTO isoIdentifier(String isoIdentifier) {
    this.isoIdentifier = isoIdentifier;
    return this;
  }

   /**
   * Get isoIdentifier
   * @return isoIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getIsoIdentifier() {
    return isoIdentifier;
  }

  public void setIsoIdentifier(String isoIdentifier) {
    this.isoIdentifier = isoIdentifier;
  }

  public ChargingStationDataListDTO additionalInfo(List<AdditionalInfoListDTO> additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  public ChargingStationDataListDTO addAdditionalInfoItem(AdditionalInfoListDTO additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<AdditionalInfoListDTO>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * Get additionalInfo
   * @return additionalInfo
  **/
  @ApiModelProperty(value = "")
  public List<AdditionalInfoListDTO> getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(List<AdditionalInfoListDTO> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingStationDataListDTO chargingStationDataListDTO = (ChargingStationDataListDTO) o;
    return Objects.equals(this.id, chargingStationDataListDTO.id) &&
        Objects.equals(this.altRemoteAddress, chargingStationDataListDTO.altRemoteAddress) &&
        Objects.equals(this.heartbeatInterval, chargingStationDataListDTO.heartbeatInterval) &&
        Objects.equals(this.connectionType, chargingStationDataListDTO.connectionType) &&
        Objects.equals(this.name, chargingStationDataListDTO.name) &&
        Objects.equals(this.hotlinePhoneNumber, chargingStationDataListDTO.hotlinePhoneNumber) &&
        Objects.equals(this.installationDate, chargingStationDataListDTO.installationDate) &&
        Objects.equals(this.nextServiceDate, chargingStationDataListDTO.nextServiceDate) &&
        Objects.equals(this.availabilityInfo, chargingStationDataListDTO.availabilityInfo) &&
        Objects.equals(this.address, chargingStationDataListDTO.address) &&
        Objects.equals(this.stationLocation, chargingStationDataListDTO.stationLocation) &&
        Objects.equals(this.entranceLocation, chargingStationDataListDTO.entranceLocation) &&
        Objects.equals(this.authenticationModes, chargingStationDataListDTO.authenticationModes) &&
        Objects.equals(this.paymentOptions, chargingStationDataListDTO.paymentOptions) &&
        Objects.equals(this.createdOn, chargingStationDataListDTO.createdOn) &&
        Objects.equals(this.isoIdentifier, chargingStationDataListDTO.isoIdentifier) &&
        Objects.equals(this.additionalInfo, chargingStationDataListDTO.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, altRemoteAddress, heartbeatInterval, connectionType, name, hotlinePhoneNumber, installationDate, nextServiceDate, availabilityInfo, address, stationLocation, entranceLocation, authenticationModes, paymentOptions, createdOn, isoIdentifier, additionalInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingStationDataListDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    altRemoteAddress: ").append(toIndentedString(altRemoteAddress)).append("\n");
    sb.append("    heartbeatInterval: ").append(toIndentedString(heartbeatInterval)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    hotlinePhoneNumber: ").append(toIndentedString(hotlinePhoneNumber)).append("\n");
    sb.append("    installationDate: ").append(toIndentedString(installationDate)).append("\n");
    sb.append("    nextServiceDate: ").append(toIndentedString(nextServiceDate)).append("\n");
    sb.append("    availabilityInfo: ").append(toIndentedString(availabilityInfo)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    stationLocation: ").append(toIndentedString(stationLocation)).append("\n");
    sb.append("    entranceLocation: ").append(toIndentedString(entranceLocation)).append("\n");
    sb.append("    authenticationModes: ").append(toIndentedString(authenticationModes)).append("\n");
    sb.append("    paymentOptions: ").append(toIndentedString(paymentOptions)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    isoIdentifier: ").append(toIndentedString(isoIdentifier)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

