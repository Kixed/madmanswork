/*
 * CS Management CSO REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Metadata of selectable Options for a charging station
 */
@ApiModel(description = "Metadata of selectable Options for a charging station")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:08:37.674+01:00")
public class ChargingStationMetaDataDTO {
  /**
   * Gets or Sets paymentOptions
   */
  @JsonAdapter(PaymentOptionsEnum.Adapter.class)
  public enum PaymentOptionsEnum {
    NO_PAYMENT("NO_PAYMENT"),
    
    DIRECT("DIRECT"),
    
    CONTRACT("CONTRACT");

    private String value;

    PaymentOptionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentOptionsEnum fromValue(String text) {
      for (PaymentOptionsEnum b : PaymentOptionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PaymentOptionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentOptionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentOptionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentOptionsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("paymentOptions")
  private List<PaymentOptionsEnum> paymentOptions = null;

  /**
   * Gets or Sets accessibilities
   */
  @JsonAdapter(AccessibilitiesEnum.Adapter.class)
  public enum AccessibilitiesEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    FREE_PUBLICLY_ACCESSIBLE("FREE_PUBLICLY_ACCESSIBLE"),
    
    RESTRICTED_ACCESS("RESTRICTED_ACCESS"),
    
    PAYING_PUBLICLY_ACCESSIBLE("PAYING_PUBLICLY_ACCESSIBLE"),
    
    TEST_STATION("TEST_STATION");

    private String value;

    AccessibilitiesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccessibilitiesEnum fromValue(String text) {
      for (AccessibilitiesEnum b : AccessibilitiesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AccessibilitiesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccessibilitiesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccessibilitiesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AccessibilitiesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("accessibilities")
  private List<AccessibilitiesEnum> accessibilities = null;

  /**
   * Gets or Sets authenticationModes
   */
  @JsonAdapter(AuthenticationModesEnum.Adapter.class)
  public enum AuthenticationModesEnum {
    NFC_RFID_CLASSIC("NFC_RFID_CLASSIC"),
    
    NFC_RFID_DESFIRE("NFC_RFID_DESFIRE"),
    
    PNC("PNC"),
    
    REMOTE("REMOTE"),
    
    DIRECT_PAYMENT("DIRECT_PAYMENT");

    private String value;

    AuthenticationModesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationModesEnum fromValue(String text) {
      for (AuthenticationModesEnum b : AuthenticationModesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthenticationModesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationModesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationModesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthenticationModesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authenticationModes")
  private List<AuthenticationModesEnum> authenticationModes = null;

  public ChargingStationMetaDataDTO paymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
    return this;
  }

  public ChargingStationMetaDataDTO addPaymentOptionsItem(PaymentOptionsEnum paymentOptionsItem) {
    if (this.paymentOptions == null) {
      this.paymentOptions = new ArrayList<PaymentOptionsEnum>();
    }
    this.paymentOptions.add(paymentOptionsItem);
    return this;
  }

   /**
   * Get paymentOptions
   * @return paymentOptions
  **/
  @ApiModelProperty(value = "")
  public List<PaymentOptionsEnum> getPaymentOptions() {
    return paymentOptions;
  }

  public void setPaymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
  }

  public ChargingStationMetaDataDTO accessibilities(List<AccessibilitiesEnum> accessibilities) {
    this.accessibilities = accessibilities;
    return this;
  }

  public ChargingStationMetaDataDTO addAccessibilitiesItem(AccessibilitiesEnum accessibilitiesItem) {
    if (this.accessibilities == null) {
      this.accessibilities = new ArrayList<AccessibilitiesEnum>();
    }
    this.accessibilities.add(accessibilitiesItem);
    return this;
  }

   /**
   * Get accessibilities
   * @return accessibilities
  **/
  @ApiModelProperty(value = "")
  public List<AccessibilitiesEnum> getAccessibilities() {
    return accessibilities;
  }

  public void setAccessibilities(List<AccessibilitiesEnum> accessibilities) {
    this.accessibilities = accessibilities;
  }

  public ChargingStationMetaDataDTO authenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
    return this;
  }

  public ChargingStationMetaDataDTO addAuthenticationModesItem(AuthenticationModesEnum authenticationModesItem) {
    if (this.authenticationModes == null) {
      this.authenticationModes = new ArrayList<AuthenticationModesEnum>();
    }
    this.authenticationModes.add(authenticationModesItem);
    return this;
  }

   /**
   * Get authenticationModes
   * @return authenticationModes
  **/
  @ApiModelProperty(value = "")
  public List<AuthenticationModesEnum> getAuthenticationModes() {
    return authenticationModes;
  }

  public void setAuthenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingStationMetaDataDTO chargingStationMetaDataDTO = (ChargingStationMetaDataDTO) o;
    return Objects.equals(this.paymentOptions, chargingStationMetaDataDTO.paymentOptions) &&
        Objects.equals(this.accessibilities, chargingStationMetaDataDTO.accessibilities) &&
        Objects.equals(this.authenticationModes, chargingStationMetaDataDTO.authenticationModes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentOptions, accessibilities, authenticationModes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingStationMetaDataDTO {\n");
    
    sb.append("    paymentOptions: ").append(toIndentedString(paymentOptions)).append("\n");
    sb.append("    accessibilities: ").append(toIndentedString(accessibilities)).append("\n");
    sb.append("    authenticationModes: ").append(toIndentedString(authenticationModes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

