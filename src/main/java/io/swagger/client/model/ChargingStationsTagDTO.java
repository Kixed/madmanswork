/*
 * CS Management CSO REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ChargingStationsTagDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:08:37.674+01:00")
public class ChargingStationsTagDTO {
  @SerializedName("chargingStationIds")
  private List<Long> chargingStationIds = new ArrayList<Long>();

  @SerializedName("tags")
  private List<String> tags = new ArrayList<String>();

  public ChargingStationsTagDTO chargingStationIds(List<Long> chargingStationIds) {
    this.chargingStationIds = chargingStationIds;
    return this;
  }

  public ChargingStationsTagDTO addChargingStationIdsItem(Long chargingStationIdsItem) {
    this.chargingStationIds.add(chargingStationIdsItem);
    return this;
  }

   /**
   * Get chargingStationIds
   * @return chargingStationIds
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Long> getChargingStationIds() {
    return chargingStationIds;
  }

  public void setChargingStationIds(List<Long> chargingStationIds) {
    this.chargingStationIds = chargingStationIds;
  }

  public ChargingStationsTagDTO tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ChargingStationsTagDTO addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingStationsTagDTO chargingStationsTagDTO = (ChargingStationsTagDTO) o;
    return Objects.equals(this.chargingStationIds, chargingStationsTagDTO.chargingStationIds) &&
        Objects.equals(this.tags, chargingStationsTagDTO.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargingStationIds, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingStationsTagDTO {\n");
    
    sb.append("    chargingStationIds: ").append(toIndentedString(chargingStationIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

