/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Identification;
import java.io.IOException;

/**
 * ERoamingAuthorizeRemoteStart
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class ERoamingAuthorizeRemoteStart {
  @SerializedName("ProviderID")
  private String providerID = null;

  @SerializedName("CPOPartnerSessionID")
  private String cpOPartnerSessionID = null;

  @SerializedName("EMPPartnerSessionID")
  private String emPPartnerSessionID = null;

  @SerializedName("EvseID")
  private String evseID = null;

  @SerializedName("Identification")
  private Identification identification = null;

  @SerializedName("PartnerProductID")
  private String partnerProductID = null;

  @SerializedName("SessionID")
  private String sessionID = null;

  public ERoamingAuthorizeRemoteStart providerID(String providerID) {
    this.providerID = providerID;
    return this;
  }

   /**
   * Get providerID
   * @return providerID
  **/
  @ApiModelProperty(required = true, value = "")
  public String getProviderID() {
    return providerID;
  }

  public void setProviderID(String providerID) {
    this.providerID = providerID;
  }

  public ERoamingAuthorizeRemoteStart cpOPartnerSessionID(String cpOPartnerSessionID) {
    this.cpOPartnerSessionID = cpOPartnerSessionID;
    return this;
  }

   /**
   * Get cpOPartnerSessionID
   * @return cpOPartnerSessionID
  **/
  @ApiModelProperty(value = "")
  public String getCpOPartnerSessionID() {
    return cpOPartnerSessionID;
  }

  public void setCpOPartnerSessionID(String cpOPartnerSessionID) {
    this.cpOPartnerSessionID = cpOPartnerSessionID;
  }

  public ERoamingAuthorizeRemoteStart emPPartnerSessionID(String emPPartnerSessionID) {
    this.emPPartnerSessionID = emPPartnerSessionID;
    return this;
  }

   /**
   * Get emPPartnerSessionID
   * @return emPPartnerSessionID
  **/
  @ApiModelProperty(value = "")
  public String getEmPPartnerSessionID() {
    return emPPartnerSessionID;
  }

  public void setEmPPartnerSessionID(String emPPartnerSessionID) {
    this.emPPartnerSessionID = emPPartnerSessionID;
  }

  public ERoamingAuthorizeRemoteStart evseID(String evseID) {
    this.evseID = evseID;
    return this;
  }

   /**
   * Get evseID
   * @return evseID
  **/
  @ApiModelProperty(value = "")
  public String getEvseID() {
    return evseID;
  }

  public void setEvseID(String evseID) {
    this.evseID = evseID;
  }

  public ERoamingAuthorizeRemoteStart identification(Identification identification) {
    this.identification = identification;
    return this;
  }

   /**
   * Get identification
   * @return identification
  **/
  @ApiModelProperty(required = true, value = "")
  public Identification getIdentification() {
    return identification;
  }

  public void setIdentification(Identification identification) {
    this.identification = identification;
  }

  public ERoamingAuthorizeRemoteStart partnerProductID(String partnerProductID) {
    this.partnerProductID = partnerProductID;
    return this;
  }

   /**
   * Get partnerProductID
   * @return partnerProductID
  **/
  @ApiModelProperty(value = "")
  public String getPartnerProductID() {
    return partnerProductID;
  }

  public void setPartnerProductID(String partnerProductID) {
    this.partnerProductID = partnerProductID;
  }

  public ERoamingAuthorizeRemoteStart sessionID(String sessionID) {
    this.sessionID = sessionID;
    return this;
  }

   /**
   * Get sessionID
   * @return sessionID
  **/
  @ApiModelProperty(value = "")
  public String getSessionID() {
    return sessionID;
  }

  public void setSessionID(String sessionID) {
    this.sessionID = sessionID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ERoamingAuthorizeRemoteStart eroamingAuthorizeRemoteStart = (ERoamingAuthorizeRemoteStart) o;
    return Objects.equals(this.providerID, eroamingAuthorizeRemoteStart.providerID) &&
        Objects.equals(this.cpOPartnerSessionID, eroamingAuthorizeRemoteStart.cpOPartnerSessionID) &&
        Objects.equals(this.emPPartnerSessionID, eroamingAuthorizeRemoteStart.emPPartnerSessionID) &&
        Objects.equals(this.evseID, eroamingAuthorizeRemoteStart.evseID) &&
        Objects.equals(this.identification, eroamingAuthorizeRemoteStart.identification) &&
        Objects.equals(this.partnerProductID, eroamingAuthorizeRemoteStart.partnerProductID) &&
        Objects.equals(this.sessionID, eroamingAuthorizeRemoteStart.sessionID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providerID, cpOPartnerSessionID, emPPartnerSessionID, evseID, identification, partnerProductID, sessionID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ERoamingAuthorizeRemoteStart {\n");
    
    sb.append("    providerID: ").append(toIndentedString(providerID)).append("\n");
    sb.append("    cpOPartnerSessionID: ").append(toIndentedString(cpOPartnerSessionID)).append("\n");
    sb.append("    emPPartnerSessionID: ").append(toIndentedString(emPPartnerSessionID)).append("\n");
    sb.append("    evseID: ").append(toIndentedString(evseID)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    partnerProductID: ").append(toIndentedString(partnerProductID)).append("\n");
    sb.append("    sessionID: ").append(toIndentedString(sessionID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

