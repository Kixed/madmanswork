/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PlugAndChargeIdentification;
import io.swagger.client.model.QRCodeIdentification;
import io.swagger.client.model.RFIDIdentification;
import io.swagger.client.model.RFIDMifareFamilyIdentification;
import io.swagger.client.model.RemoteIdentification;
import java.io.IOException;

/**
 * Identification
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class Identification {
  @SerializedName("qrcodeIdentification")
  private QRCodeIdentification qrcodeIdentification = null;

  @SerializedName("RFIDMifareFamilyIdentification")
  private RFIDMifareFamilyIdentification rfIDMifareFamilyIdentification = null;

  @SerializedName("QRCodeIdentification")
  private QRCodeIdentification qrCodeIdentification = null;

  @SerializedName("PlugAndChargeIdentification")
  private PlugAndChargeIdentification plugAndChargeIdentification = null;

  @SerializedName("RemoteIdentification")
  private RemoteIdentification remoteIdentification = null;

  @SerializedName("RFIDIdentification")
  private RFIDIdentification rfIDIdentification = null;

  public Identification qrcodeIdentification(QRCodeIdentification qrcodeIdentification) {
    this.qrcodeIdentification = qrcodeIdentification;
    return this;
  }

   /**
   * Get qrcodeIdentification
   * @return qrcodeIdentification
  **/
  @ApiModelProperty(value = "")
  public QRCodeIdentification getQrcodeIdentification() {
    return qrcodeIdentification;
  }

  public void setQrcodeIdentification(QRCodeIdentification qrcodeIdentification) {
    this.qrcodeIdentification = qrcodeIdentification;
  }

  public Identification rfIDMifareFamilyIdentification(RFIDMifareFamilyIdentification rfIDMifareFamilyIdentification) {
    this.rfIDMifareFamilyIdentification = rfIDMifareFamilyIdentification;
    return this;
  }

   /**
   * Get rfIDMifareFamilyIdentification
   * @return rfIDMifareFamilyIdentification
  **/
  @ApiModelProperty(value = "")
  public RFIDMifareFamilyIdentification getRfIDMifareFamilyIdentification() {
    return rfIDMifareFamilyIdentification;
  }

  public void setRfIDMifareFamilyIdentification(RFIDMifareFamilyIdentification rfIDMifareFamilyIdentification) {
    this.rfIDMifareFamilyIdentification = rfIDMifareFamilyIdentification;
  }

  public Identification qrCodeIdentification(QRCodeIdentification qrCodeIdentification) {
    this.qrCodeIdentification = qrCodeIdentification;
    return this;
  }

   /**
   * Get qrCodeIdentification
   * @return qrCodeIdentification
  **/
  @ApiModelProperty(value = "")
  public QRCodeIdentification getQrCodeIdentification() {
    return qrCodeIdentification;
  }

  public void setQrCodeIdentification(QRCodeIdentification qrCodeIdentification) {
    this.qrCodeIdentification = qrCodeIdentification;
  }

  public Identification plugAndChargeIdentification(PlugAndChargeIdentification plugAndChargeIdentification) {
    this.plugAndChargeIdentification = plugAndChargeIdentification;
    return this;
  }

   /**
   * Get plugAndChargeIdentification
   * @return plugAndChargeIdentification
  **/
  @ApiModelProperty(value = "")
  public PlugAndChargeIdentification getPlugAndChargeIdentification() {
    return plugAndChargeIdentification;
  }

  public void setPlugAndChargeIdentification(PlugAndChargeIdentification plugAndChargeIdentification) {
    this.plugAndChargeIdentification = plugAndChargeIdentification;
  }

  public Identification remoteIdentification(RemoteIdentification remoteIdentification) {
    this.remoteIdentification = remoteIdentification;
    return this;
  }

   /**
   * Get remoteIdentification
   * @return remoteIdentification
  **/
  @ApiModelProperty(value = "")
  public RemoteIdentification getRemoteIdentification() {
    return remoteIdentification;
  }

  public void setRemoteIdentification(RemoteIdentification remoteIdentification) {
    this.remoteIdentification = remoteIdentification;
  }

  public Identification rfIDIdentification(RFIDIdentification rfIDIdentification) {
    this.rfIDIdentification = rfIDIdentification;
    return this;
  }

   /**
   * Get rfIDIdentification
   * @return rfIDIdentification
  **/
  @ApiModelProperty(value = "")
  public RFIDIdentification getRfIDIdentification() {
    return rfIDIdentification;
  }

  public void setRfIDIdentification(RFIDIdentification rfIDIdentification) {
    this.rfIDIdentification = rfIDIdentification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Identification identification = (Identification) o;
    return Objects.equals(this.qrcodeIdentification, identification.qrcodeIdentification) &&
        Objects.equals(this.rfIDMifareFamilyIdentification, identification.rfIDMifareFamilyIdentification) &&
        Objects.equals(this.qrCodeIdentification, identification.qrCodeIdentification) &&
        Objects.equals(this.plugAndChargeIdentification, identification.plugAndChargeIdentification) &&
        Objects.equals(this.remoteIdentification, identification.remoteIdentification) &&
        Objects.equals(this.rfIDIdentification, identification.rfIDIdentification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qrcodeIdentification, rfIDMifareFamilyIdentification, qrCodeIdentification, plugAndChargeIdentification, remoteIdentification, rfIDIdentification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Identification {\n");
    
    sb.append("    qrcodeIdentification: ").append(toIndentedString(qrcodeIdentification)).append("\n");
    sb.append("    rfIDMifareFamilyIdentification: ").append(toIndentedString(rfIDMifareFamilyIdentification)).append("\n");
    sb.append("    qrCodeIdentification: ").append(toIndentedString(qrCodeIdentification)).append("\n");
    sb.append("    plugAndChargeIdentification: ").append(toIndentedString(plugAndChargeIdentification)).append("\n");
    sb.append("    remoteIdentification: ").append(toIndentedString(remoteIdentification)).append("\n");
    sb.append("    rfIDIdentification: ").append(toIndentedString(rfIDIdentification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

