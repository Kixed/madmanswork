/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * LastRoamingMessageDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class LastRoamingMessageDTO {
  @SerializedName("csoId")
  private Long csoId = null;

  @SerializedName("lastMessageInstant")
  private Long lastMessageInstant = null;

  @SerializedName("lastMessageDate")
  private OffsetDateTime lastMessageDate = null;

  @SerializedName("messageName")
  private String messageName = null;

  public LastRoamingMessageDTO csoId(Long csoId) {
    this.csoId = csoId;
    return this;
  }

   /**
   * Get csoId
   * @return csoId
  **/
  @ApiModelProperty(value = "")
  public Long getCsoId() {
    return csoId;
  }

  public void setCsoId(Long csoId) {
    this.csoId = csoId;
  }

  public LastRoamingMessageDTO lastMessageInstant(Long lastMessageInstant) {
    this.lastMessageInstant = lastMessageInstant;
    return this;
  }

   /**
   * Get lastMessageInstant
   * @return lastMessageInstant
  **/
  @ApiModelProperty(value = "")
  public Long getLastMessageInstant() {
    return lastMessageInstant;
  }

  public void setLastMessageInstant(Long lastMessageInstant) {
    this.lastMessageInstant = lastMessageInstant;
  }

  public LastRoamingMessageDTO lastMessageDate(OffsetDateTime lastMessageDate) {
    this.lastMessageDate = lastMessageDate;
    return this;
  }

   /**
   * Get lastMessageDate
   * @return lastMessageDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastMessageDate() {
    return lastMessageDate;
  }

  public void setLastMessageDate(OffsetDateTime lastMessageDate) {
    this.lastMessageDate = lastMessageDate;
  }

  public LastRoamingMessageDTO messageName(String messageName) {
    this.messageName = messageName;
    return this;
  }

   /**
   * Get messageName
   * @return messageName
  **/
  @ApiModelProperty(value = "")
  public String getMessageName() {
    return messageName;
  }

  public void setMessageName(String messageName) {
    this.messageName = messageName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LastRoamingMessageDTO lastRoamingMessageDTO = (LastRoamingMessageDTO) o;
    return Objects.equals(this.csoId, lastRoamingMessageDTO.csoId) &&
        Objects.equals(this.lastMessageInstant, lastRoamingMessageDTO.lastMessageInstant) &&
        Objects.equals(this.lastMessageDate, lastRoamingMessageDTO.lastMessageDate) &&
        Objects.equals(this.messageName, lastRoamingMessageDTO.messageName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(csoId, lastMessageInstant, lastMessageDate, messageName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LastRoamingMessageDTO {\n");
    
    sb.append("    csoId: ").append(toIndentedString(csoId)).append("\n");
    sb.append("    lastMessageInstant: ").append(toIndentedString(lastMessageInstant)).append("\n");
    sb.append("    lastMessageDate: ").append(toIndentedString(lastMessageDate)).append("\n");
    sb.append("    messageName: ").append(toIndentedString(messageName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

