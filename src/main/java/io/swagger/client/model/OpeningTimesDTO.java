/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PeriodDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OpeningTimesDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class OpeningTimesDTO {
  @SerializedName("period")
  private List<PeriodDTO> period = new ArrayList<PeriodDTO>();

  /**
   * Gets or Sets on
   */
  @JsonAdapter(OnEnum.Adapter.class)
  public enum OnEnum {
    EVERYDAY("EVERYDAY"),
    
    WORKDAYS("WORKDAYS"),
    
    WEEKEND("WEEKEND"),
    
    MONDAY("MONDAY"),
    
    TUESDAY("TUESDAY"),
    
    WEDNESDAY("WEDNESDAY"),
    
    THURSDAY("THURSDAY"),
    
    FRIDAY("FRIDAY"),
    
    SATURDAY("SATURDAY"),
    
    SUNDAY("SUNDAY");

    private String value;

    OnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OnEnum fromValue(String text) {
      for (OnEnum b : OnEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OnEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OnEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("on")
  private OnEnum on = null;

  public OpeningTimesDTO period(List<PeriodDTO> period) {
    this.period = period;
    return this;
  }

  public OpeningTimesDTO addPeriodItem(PeriodDTO periodItem) {
    this.period.add(periodItem);
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(required = true, value = "")
  public List<PeriodDTO> getPeriod() {
    return period;
  }

  public void setPeriod(List<PeriodDTO> period) {
    this.period = period;
  }

  public OpeningTimesDTO on(OnEnum on) {
    this.on = on;
    return this;
  }

   /**
   * Get on
   * @return on
  **/
  @ApiModelProperty(required = true, value = "")
  public OnEnum getOn() {
    return on;
  }

  public void setOn(OnEnum on) {
    this.on = on;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpeningTimesDTO openingTimesDTO = (OpeningTimesDTO) o;
    return Objects.equals(this.period, openingTimesDTO.period) &&
        Objects.equals(this.on, openingTimesDTO.on);
  }

  @Override
  public int hashCode() {
    return Objects.hash(period, on);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpeningTimesDTO {\n");
    
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    on: ").append(toIndentedString(on)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

