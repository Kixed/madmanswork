/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LocationDTO;
import java.io.IOException;

/**
 * ReducedRemoteChargingStationDataListDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class ReducedRemoteChargingStationDataListDTO {
  @SerializedName("stationLocation")
  private LocationDTO stationLocation = null;

  @SerializedName("entranceLocation")
  private LocationDTO entranceLocation = null;

  @SerializedName("name")
  private String name = null;

  public ReducedRemoteChargingStationDataListDTO stationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
    return this;
  }

   /**
   * Get stationLocation
   * @return stationLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getStationLocation() {
    return stationLocation;
  }

  public void setStationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
  }

  public ReducedRemoteChargingStationDataListDTO entranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
    return this;
  }

   /**
   * Get entranceLocation
   * @return entranceLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getEntranceLocation() {
    return entranceLocation;
  }

  public void setEntranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
  }

  public ReducedRemoteChargingStationDataListDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReducedRemoteChargingStationDataListDTO reducedRemoteChargingStationDataListDTO = (ReducedRemoteChargingStationDataListDTO) o;
    return Objects.equals(this.stationLocation, reducedRemoteChargingStationDataListDTO.stationLocation) &&
        Objects.equals(this.entranceLocation, reducedRemoteChargingStationDataListDTO.entranceLocation) &&
        Objects.equals(this.name, reducedRemoteChargingStationDataListDTO.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stationLocation, entranceLocation, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReducedRemoteChargingStationDataListDTO {\n");
    
    sb.append("    stationLocation: ").append(toIndentedString(stationLocation)).append("\n");
    sb.append("    entranceLocation: ").append(toIndentedString(entranceLocation)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

