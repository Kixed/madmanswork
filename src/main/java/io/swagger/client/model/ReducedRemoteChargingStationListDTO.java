/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ReducedRemoteChargingStationDataListDTO;
import io.swagger.client.model.ReducedRemoteEvseListDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReducedRemoteChargingStationListDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class ReducedRemoteChargingStationListDTO {
  @SerializedName("evses")
  private List<ReducedRemoteEvseListDTO> evses = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("externalChargingStationId")
  private String externalChargingStationId = null;

  /**
   * Gets or Sets source
   */
  @JsonAdapter(SourceEnum.Adapter.class)
  public enum SourceEnum {
    DIRECT("DIRECT"),
    
    DIRECT_LOCAL("DIRECT_LOCAL"),
    
    HUBJECT("HUBJECT");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String text) {
      for (SourceEnum b : SourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("source")
  private SourceEnum source = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    AVAILABLE("AVAILABLE"),
    
    FAULTED("FAULTED"),
    
    OCCUPIED("OCCUPIED"),
    
    RESERVED("RESERVED"),
    
    UNAVAILABLE("UNAVAILABLE"),
    
    EVSE_STATUS_UNKNOWN("EVSE_STATUS_UNKNOWN"),
    
    NO_EVSES("NO_EVSES"),
    
    OFFLINE("OFFLINE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("operatorId")
  private String operatorId = null;

  @SerializedName("chargingStationData")
  private ReducedRemoteChargingStationDataListDTO chargingStationData = null;

  public ReducedRemoteChargingStationListDTO evses(List<ReducedRemoteEvseListDTO> evses) {
    this.evses = evses;
    return this;
  }

  public ReducedRemoteChargingStationListDTO addEvsesItem(ReducedRemoteEvseListDTO evsesItem) {
    if (this.evses == null) {
      this.evses = new ArrayList<ReducedRemoteEvseListDTO>();
    }
    this.evses.add(evsesItem);
    return this;
  }

   /**
   * Get evses
   * @return evses
  **/
  @ApiModelProperty(value = "")
  public List<ReducedRemoteEvseListDTO> getEvses() {
    return evses;
  }

  public void setEvses(List<ReducedRemoteEvseListDTO> evses) {
    this.evses = evses;
  }

  public ReducedRemoteChargingStationListDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ReducedRemoteChargingStationListDTO externalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
    return this;
  }

   /**
   * Get externalChargingStationId
   * @return externalChargingStationId
  **/
  @ApiModelProperty(value = "")
  public String getExternalChargingStationId() {
    return externalChargingStationId;
  }

  public void setExternalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
  }

  public ReducedRemoteChargingStationListDTO source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public SourceEnum getSource() {
    return source;
  }

  public void setSource(SourceEnum source) {
    this.source = source;
  }

  public ReducedRemoteChargingStationListDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ReducedRemoteChargingStationListDTO operatorId(String operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @ApiModelProperty(value = "")
  public String getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(String operatorId) {
    this.operatorId = operatorId;
  }

  public ReducedRemoteChargingStationListDTO chargingStationData(ReducedRemoteChargingStationDataListDTO chargingStationData) {
    this.chargingStationData = chargingStationData;
    return this;
  }

   /**
   * Get chargingStationData
   * @return chargingStationData
  **/
  @ApiModelProperty(value = "")
  public ReducedRemoteChargingStationDataListDTO getChargingStationData() {
    return chargingStationData;
  }

  public void setChargingStationData(ReducedRemoteChargingStationDataListDTO chargingStationData) {
    this.chargingStationData = chargingStationData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReducedRemoteChargingStationListDTO reducedRemoteChargingStationListDTO = (ReducedRemoteChargingStationListDTO) o;
    return Objects.equals(this.evses, reducedRemoteChargingStationListDTO.evses) &&
        Objects.equals(this.id, reducedRemoteChargingStationListDTO.id) &&
        Objects.equals(this.externalChargingStationId, reducedRemoteChargingStationListDTO.externalChargingStationId) &&
        Objects.equals(this.source, reducedRemoteChargingStationListDTO.source) &&
        Objects.equals(this.status, reducedRemoteChargingStationListDTO.status) &&
        Objects.equals(this.operatorId, reducedRemoteChargingStationListDTO.operatorId) &&
        Objects.equals(this.chargingStationData, reducedRemoteChargingStationListDTO.chargingStationData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evses, id, externalChargingStationId, source, status, operatorId, chargingStationData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReducedRemoteChargingStationListDTO {\n");
    
    sb.append("    evses: ").append(toIndentedString(evses)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalChargingStationId: ").append(toIndentedString(externalChargingStationId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    chargingStationData: ").append(toIndentedString(chargingStationData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

