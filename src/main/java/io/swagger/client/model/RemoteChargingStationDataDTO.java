/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AddressDTO;
import io.swagger.client.model.LocationDTO;
import io.swagger.client.model.RemoteAvailabilityInfoDTO;
import io.swagger.client.model.VersionedData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * RemoteChargingStationDataDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class RemoteChargingStationDataDTO {
  @SerializedName("versionedData")
  private VersionedData versionedData = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("hotlinePhoneNumber")
  private String hotlinePhoneNumber = null;

  @SerializedName("installationDate")
  private LocalDate installationDate = null;

  @SerializedName("availabilityInfo")
  private RemoteAvailabilityInfoDTO availabilityInfo = null;

  /**
   * Gets or Sets authenticationModes
   */
  @JsonAdapter(AuthenticationModesEnum.Adapter.class)
  public enum AuthenticationModesEnum {
    NFC_RFID_CLASSIC("NFC_RFID_CLASSIC"),
    
    NFC_RFID_DESFIRE("NFC_RFID_DESFIRE"),
    
    PNC("PNC"),
    
    REMOTE("REMOTE"),
    
    DIRECT_PAYMENT("DIRECT_PAYMENT");

    private String value;

    AuthenticationModesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationModesEnum fromValue(String text) {
      for (AuthenticationModesEnum b : AuthenticationModesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthenticationModesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationModesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationModesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthenticationModesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authenticationModes")
  private List<AuthenticationModesEnum> authenticationModes = null;

  /**
   * Gets or Sets paymentOptions
   */
  @JsonAdapter(PaymentOptionsEnum.Adapter.class)
  public enum PaymentOptionsEnum {
    NO_PAYMENT("NO_PAYMENT"),
    
    DIRECT("DIRECT"),
    
    CONTRACT("CONTRACT");

    private String value;

    PaymentOptionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentOptionsEnum fromValue(String text) {
      for (PaymentOptionsEnum b : PaymentOptionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PaymentOptionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentOptionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentOptionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentOptionsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("paymentOptions")
  private List<PaymentOptionsEnum> paymentOptions = null;

  @SerializedName("additionalInfo")
  private Map<String, String> additionalInfo = null;

  @SerializedName("address")
  private AddressDTO address = null;

  @SerializedName("stationLocation")
  private LocationDTO stationLocation = null;

  @SerializedName("entranceLocation")
  private LocationDTO entranceLocation = null;

  @SerializedName("changedOn")
  private OffsetDateTime changedOn = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  public RemoteChargingStationDataDTO versionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
    return this;
  }

   /**
   * Get versionedData
   * @return versionedData
  **/
  @ApiModelProperty(value = "")
  public VersionedData getVersionedData() {
    return versionedData;
  }

  public void setVersionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
  }

  public RemoteChargingStationDataDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RemoteChargingStationDataDTO hotlinePhoneNumber(String hotlinePhoneNumber) {
    this.hotlinePhoneNumber = hotlinePhoneNumber;
    return this;
  }

   /**
   * Get hotlinePhoneNumber
   * @return hotlinePhoneNumber
  **/
  @ApiModelProperty(value = "")
  public String getHotlinePhoneNumber() {
    return hotlinePhoneNumber;
  }

  public void setHotlinePhoneNumber(String hotlinePhoneNumber) {
    this.hotlinePhoneNumber = hotlinePhoneNumber;
  }

  public RemoteChargingStationDataDTO installationDate(LocalDate installationDate) {
    this.installationDate = installationDate;
    return this;
  }

   /**
   * Get installationDate
   * @return installationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getInstallationDate() {
    return installationDate;
  }

  public void setInstallationDate(LocalDate installationDate) {
    this.installationDate = installationDate;
  }

  public RemoteChargingStationDataDTO availabilityInfo(RemoteAvailabilityInfoDTO availabilityInfo) {
    this.availabilityInfo = availabilityInfo;
    return this;
  }

   /**
   * Get availabilityInfo
   * @return availabilityInfo
  **/
  @ApiModelProperty(required = true, value = "")
  public RemoteAvailabilityInfoDTO getAvailabilityInfo() {
    return availabilityInfo;
  }

  public void setAvailabilityInfo(RemoteAvailabilityInfoDTO availabilityInfo) {
    this.availabilityInfo = availabilityInfo;
  }

  public RemoteChargingStationDataDTO authenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
    return this;
  }

  public RemoteChargingStationDataDTO addAuthenticationModesItem(AuthenticationModesEnum authenticationModesItem) {
    if (this.authenticationModes == null) {
      this.authenticationModes = new ArrayList<AuthenticationModesEnum>();
    }
    this.authenticationModes.add(authenticationModesItem);
    return this;
  }

   /**
   * Get authenticationModes
   * @return authenticationModes
  **/
  @ApiModelProperty(value = "")
  public List<AuthenticationModesEnum> getAuthenticationModes() {
    return authenticationModes;
  }

  public void setAuthenticationModes(List<AuthenticationModesEnum> authenticationModes) {
    this.authenticationModes = authenticationModes;
  }

  public RemoteChargingStationDataDTO paymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
    return this;
  }

  public RemoteChargingStationDataDTO addPaymentOptionsItem(PaymentOptionsEnum paymentOptionsItem) {
    if (this.paymentOptions == null) {
      this.paymentOptions = new ArrayList<PaymentOptionsEnum>();
    }
    this.paymentOptions.add(paymentOptionsItem);
    return this;
  }

   /**
   * Get paymentOptions
   * @return paymentOptions
  **/
  @ApiModelProperty(value = "")
  public List<PaymentOptionsEnum> getPaymentOptions() {
    return paymentOptions;
  }

  public void setPaymentOptions(List<PaymentOptionsEnum> paymentOptions) {
    this.paymentOptions = paymentOptions;
  }

  public RemoteChargingStationDataDTO additionalInfo(Map<String, String> additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  public RemoteChargingStationDataDTO putAdditionalInfoItem(String key, String additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new HashMap<String, String>();
    }
    this.additionalInfo.put(key, additionalInfoItem);
    return this;
  }

   /**
   * Additional information with the language code as property. Example: {\&quot;de\&quot;:\&quot;Information auf Deutsch\&quot;, \&quot;en\&quot;: \&quot;English information\&quot;}
   * @return additionalInfo
  **/
  @ApiModelProperty(value = "Additional information with the language code as property. Example: {\"de\":\"Information auf Deutsch\", \"en\": \"English information\"}")
  public Map<String, String> getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(Map<String, String> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  public RemoteChargingStationDataDTO address(AddressDTO address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public AddressDTO getAddress() {
    return address;
  }

  public void setAddress(AddressDTO address) {
    this.address = address;
  }

  public RemoteChargingStationDataDTO stationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
    return this;
  }

   /**
   * Get stationLocation
   * @return stationLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getStationLocation() {
    return stationLocation;
  }

  public void setStationLocation(LocationDTO stationLocation) {
    this.stationLocation = stationLocation;
  }

  public RemoteChargingStationDataDTO entranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
    return this;
  }

   /**
   * Get entranceLocation
   * @return entranceLocation
  **/
  @ApiModelProperty(value = "")
  public LocationDTO getEntranceLocation() {
    return entranceLocation;
  }

  public void setEntranceLocation(LocationDTO entranceLocation) {
    this.entranceLocation = entranceLocation;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteChargingStationDataDTO remoteChargingStationDataDTO = (RemoteChargingStationDataDTO) o;
    return Objects.equals(this.versionedData, remoteChargingStationDataDTO.versionedData) &&
        Objects.equals(this.name, remoteChargingStationDataDTO.name) &&
        Objects.equals(this.hotlinePhoneNumber, remoteChargingStationDataDTO.hotlinePhoneNumber) &&
        Objects.equals(this.installationDate, remoteChargingStationDataDTO.installationDate) &&
        Objects.equals(this.availabilityInfo, remoteChargingStationDataDTO.availabilityInfo) &&
        Objects.equals(this.authenticationModes, remoteChargingStationDataDTO.authenticationModes) &&
        Objects.equals(this.paymentOptions, remoteChargingStationDataDTO.paymentOptions) &&
        Objects.equals(this.additionalInfo, remoteChargingStationDataDTO.additionalInfo) &&
        Objects.equals(this.address, remoteChargingStationDataDTO.address) &&
        Objects.equals(this.stationLocation, remoteChargingStationDataDTO.stationLocation) &&
        Objects.equals(this.entranceLocation, remoteChargingStationDataDTO.entranceLocation) &&
        Objects.equals(this.changedOn, remoteChargingStationDataDTO.changedOn) &&
        Objects.equals(this.createdOn, remoteChargingStationDataDTO.createdOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionedData, name, hotlinePhoneNumber, installationDate, availabilityInfo, authenticationModes, paymentOptions, additionalInfo, address, stationLocation, entranceLocation, changedOn, createdOn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteChargingStationDataDTO {\n");
    
    sb.append("    versionedData: ").append(toIndentedString(versionedData)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    hotlinePhoneNumber: ").append(toIndentedString(hotlinePhoneNumber)).append("\n");
    sb.append("    installationDate: ").append(toIndentedString(installationDate)).append("\n");
    sb.append("    availabilityInfo: ").append(toIndentedString(availabilityInfo)).append("\n");
    sb.append("    authenticationModes: ").append(toIndentedString(authenticationModes)).append("\n");
    sb.append("    paymentOptions: ").append(toIndentedString(paymentOptions)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    stationLocation: ").append(toIndentedString(stationLocation)).append("\n");
    sb.append("    entranceLocation: ").append(toIndentedString(entranceLocation)).append("\n");
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

