/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AddressDTO;
import io.swagger.client.model.ChargingInfoDTO;
import io.swagger.client.model.LocationDTO;
import io.swagger.client.model.RoamingInfoDTO;
import io.swagger.client.model.TransactionInfoDTO;
import io.swagger.client.model.VersionedData;
import java.io.IOException;

/**
 * RemoteChargingTransactionDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class RemoteChargingTransactionDTO {
  @SerializedName("versionedData")
  private VersionedData versionedData = null;

  @SerializedName("idTag")
  private String idTag = null;

  @SerializedName("empSessionId")
  private String empSessionId = null;

  @SerializedName("csoSessionId")
  private String csoSessionId = null;

  /**
   * Id tag authorization status
   */
  @JsonAdapter(AuthorizationStatusEnum.Adapter.class)
  public enum AuthorizationStatusEnum {
    ACCEPTED("ACCEPTED"),
    
    BLOCKED("BLOCKED"),
    
    EXPIRED("EXPIRED"),
    
    INVALID("INVALID"),
    
    CONCURRENT_TX("CONCURRENT_TX");

    private String value;

    AuthorizationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthorizationStatusEnum fromValue(String text) {
      for (AuthorizationStatusEnum b : AuthorizationStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthorizationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthorizationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthorizationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthorizationStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authorizationStatus")
  private AuthorizationStatusEnum authorizationStatus = null;

  @SerializedName("transactionInfo")
  private TransactionInfoDTO transactionInfo = null;

  @SerializedName("chargingInfo")
  private ChargingInfoDTO chargingInfo = null;

  @SerializedName("roamingInfo")
  private RoamingInfoDTO roamingInfo = null;

  /**
   * Plausibility check result
   */
  @JsonAdapter(PlausibilityEnum.Adapter.class)
  public enum PlausibilityEnum {
    PLAUSIBLE("PLAUSIBLE"),
    
    NOT_PLAUSIBLE("NOT_PLAUSIBLE");

    private String value;

    PlausibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlausibilityEnum fromValue(String text) {
      for (PlausibilityEnum b : PlausibilityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PlausibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlausibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlausibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PlausibilityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("plausibility")
  private PlausibilityEnum plausibility = null;

  @SerializedName("evseId")
  private String evseId = null;

  @SerializedName("empId")
  private Long empId = null;

  @SerializedName("externalChargingStationId")
  private String externalChargingStationId = null;

  /**
   * Status of current transaction
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("PENDING"),
    
    OPEN("OPEN"),
    
    FINISHED("FINISHED"),
    
    FAILURE("FAILURE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("cardNumber")
  private String cardNumber = null;

  @SerializedName("customerNumber")
  private String customerNumber = null;

  @SerializedName("operatorId")
  private String operatorId = null;

  @SerializedName("bpRoamingContractId")
  private Long bpRoamingContractId = null;

  @SerializedName("externalSessionId")
  private String externalSessionId = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("transactionDuration")
  private Long transactionDuration = null;

  @SerializedName("address")
  private AddressDTO address = null;

  @SerializedName("stationLocation")
  private LocationDTO stationLocation = null;

  public RemoteChargingTransactionDTO versionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
    return this;
  }

   /**
   * Get versionedData
   * @return versionedData
  **/
  @ApiModelProperty(value = "")
  public VersionedData getVersionedData() {
    return versionedData;
  }

  public void setVersionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
  }

  public RemoteChargingTransactionDTO idTag(String idTag) {
    this.idTag = idTag;
    return this;
  }

   /**
   * Id tag the EMP customer
   * @return idTag
  **/
  @ApiModelProperty(required = true, value = "Id tag the EMP customer")
  public String getIdTag() {
    return idTag;
  }

  public void setIdTag(String idTag) {
    this.idTag = idTag;
  }

  public RemoteChargingTransactionDTO empSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
    return this;
  }

   /**
   * Session Id provided by EMP system
   * @return empSessionId
  **/
  @ApiModelProperty(value = "Session Id provided by EMP system")
  public String getEmpSessionId() {
    return empSessionId;
  }

  public void setEmpSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
  }

  public RemoteChargingTransactionDTO csoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
    return this;
  }

   /**
   * Session Id provided by CSO system
   * @return csoSessionId
  **/
  @ApiModelProperty(value = "Session Id provided by CSO system")
  public String getCsoSessionId() {
    return csoSessionId;
  }

  public void setCsoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
  }

  public RemoteChargingTransactionDTO authorizationStatus(AuthorizationStatusEnum authorizationStatus) {
    this.authorizationStatus = authorizationStatus;
    return this;
  }

   /**
   * Id tag authorization status
   * @return authorizationStatus
  **/
  @ApiModelProperty(value = "Id tag authorization status")
  public AuthorizationStatusEnum getAuthorizationStatus() {
    return authorizationStatus;
  }

  public void setAuthorizationStatus(AuthorizationStatusEnum authorizationStatus) {
    this.authorizationStatus = authorizationStatus;
  }

  public RemoteChargingTransactionDTO transactionInfo(TransactionInfoDTO transactionInfo) {
    this.transactionInfo = transactionInfo;
    return this;
  }

   /**
   * Object containing additional information about transaction
   * @return transactionInfo
  **/
  @ApiModelProperty(value = "Object containing additional information about transaction")
  public TransactionInfoDTO getTransactionInfo() {
    return transactionInfo;
  }

  public void setTransactionInfo(TransactionInfoDTO transactionInfo) {
    this.transactionInfo = transactionInfo;
  }

  public RemoteChargingTransactionDTO chargingInfo(ChargingInfoDTO chargingInfo) {
    this.chargingInfo = chargingInfo;
    return this;
  }

   /**
   * Object containing additional information about charging process
   * @return chargingInfo
  **/
  @ApiModelProperty(value = "Object containing additional information about charging process")
  public ChargingInfoDTO getChargingInfo() {
    return chargingInfo;
  }

  public void setChargingInfo(ChargingInfoDTO chargingInfo) {
    this.chargingInfo = chargingInfo;
  }

  public RemoteChargingTransactionDTO roamingInfo(RoamingInfoDTO roamingInfo) {
    this.roamingInfo = roamingInfo;
    return this;
  }

   /**
   * Object containing additional information about roaming process
   * @return roamingInfo
  **/
  @ApiModelProperty(value = "Object containing additional information about roaming process")
  public RoamingInfoDTO getRoamingInfo() {
    return roamingInfo;
  }

  public void setRoamingInfo(RoamingInfoDTO roamingInfo) {
    this.roamingInfo = roamingInfo;
  }

  public RemoteChargingTransactionDTO plausibility(PlausibilityEnum plausibility) {
    this.plausibility = plausibility;
    return this;
  }

   /**
   * Plausibility check result
   * @return plausibility
  **/
  @ApiModelProperty(value = "Plausibility check result")
  public PlausibilityEnum getPlausibility() {
    return plausibility;
  }

  public void setPlausibility(PlausibilityEnum plausibility) {
    this.plausibility = plausibility;
  }

  public RemoteChargingTransactionDTO evseId(String evseId) {
    this.evseId = evseId;
    return this;
  }

   /**
   * Official EVSE Id of the charge point / connector to start the transaction
   * @return evseId
  **/
  @ApiModelProperty(required = true, value = "Official EVSE Id of the charge point / connector to start the transaction")
  public String getEvseId() {
    return evseId;
  }

  public void setEvseId(String evseId) {
    this.evseId = evseId;
  }

  public RemoteChargingTransactionDTO empId(Long empId) {
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getEmpId() {
    return empId;
  }

  public void setEmpId(Long empId) {
    this.empId = empId;
  }

  public RemoteChargingTransactionDTO externalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
    return this;
  }

   /**
   * Official charging station ID from OCPP
   * @return externalChargingStationId
  **/
  @ApiModelProperty(value = "Official charging station ID from OCPP")
  public String getExternalChargingStationId() {
    return externalChargingStationId;
  }

  public void setExternalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
  }

  public RemoteChargingTransactionDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of current transaction
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Status of current transaction")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public RemoteChargingTransactionDTO cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Get cardNumber
   * @return cardNumber
  **/
  @ApiModelProperty(value = "")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public RemoteChargingTransactionDTO customerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

   /**
   * Get customerNumber
   * @return customerNumber
  **/
  @ApiModelProperty(value = "")
  public String getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
  }

  public RemoteChargingTransactionDTO operatorId(String operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(String operatorId) {
    this.operatorId = operatorId;
  }

  public RemoteChargingTransactionDTO bpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
    return this;
  }

   /**
   * Get bpRoamingContractId
   * @return bpRoamingContractId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBpRoamingContractId() {
    return bpRoamingContractId;
  }

  public void setBpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
  }

  public RemoteChargingTransactionDTO externalSessionId(String externalSessionId) {
    this.externalSessionId = externalSessionId;
    return this;
  }

   /**
   * Get externalSessionId
   * @return externalSessionId
  **/
  @ApiModelProperty(value = "")
  public String getExternalSessionId() {
    return externalSessionId;
  }

  public void setExternalSessionId(String externalSessionId) {
    this.externalSessionId = externalSessionId;
  }

   /**
   * Duration in milliseconds
   * @return duration
  **/
  @ApiModelProperty(value = "Duration in milliseconds")
  public Long getDuration() {
    return duration;
  }

   /**
   * TransactionDuration in milliseconds
   * @return transactionDuration
  **/
  @ApiModelProperty(value = "TransactionDuration in milliseconds")
  public Long getTransactionDuration() {
    return transactionDuration;
  }

   /**
   * Address where the transaction took place
   * @return address
  **/
  @ApiModelProperty(value = "Address where the transaction took place")
  public AddressDTO getAddress() {
    return address;
  }

   /**
   * Location where the transaction took place
   * @return stationLocation
  **/
  @ApiModelProperty(value = "Location where the transaction took place")
  public LocationDTO getStationLocation() {
    return stationLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteChargingTransactionDTO remoteChargingTransactionDTO = (RemoteChargingTransactionDTO) o;
    return Objects.equals(this.versionedData, remoteChargingTransactionDTO.versionedData) &&
        Objects.equals(this.idTag, remoteChargingTransactionDTO.idTag) &&
        Objects.equals(this.empSessionId, remoteChargingTransactionDTO.empSessionId) &&
        Objects.equals(this.csoSessionId, remoteChargingTransactionDTO.csoSessionId) &&
        Objects.equals(this.authorizationStatus, remoteChargingTransactionDTO.authorizationStatus) &&
        Objects.equals(this.transactionInfo, remoteChargingTransactionDTO.transactionInfo) &&
        Objects.equals(this.chargingInfo, remoteChargingTransactionDTO.chargingInfo) &&
        Objects.equals(this.roamingInfo, remoteChargingTransactionDTO.roamingInfo) &&
        Objects.equals(this.plausibility, remoteChargingTransactionDTO.plausibility) &&
        Objects.equals(this.evseId, remoteChargingTransactionDTO.evseId) &&
        Objects.equals(this.empId, remoteChargingTransactionDTO.empId) &&
        Objects.equals(this.externalChargingStationId, remoteChargingTransactionDTO.externalChargingStationId) &&
        Objects.equals(this.status, remoteChargingTransactionDTO.status) &&
        Objects.equals(this.cardNumber, remoteChargingTransactionDTO.cardNumber) &&
        Objects.equals(this.customerNumber, remoteChargingTransactionDTO.customerNumber) &&
        Objects.equals(this.operatorId, remoteChargingTransactionDTO.operatorId) &&
        Objects.equals(this.bpRoamingContractId, remoteChargingTransactionDTO.bpRoamingContractId) &&
        Objects.equals(this.externalSessionId, remoteChargingTransactionDTO.externalSessionId) &&
        Objects.equals(this.duration, remoteChargingTransactionDTO.duration) &&
        Objects.equals(this.transactionDuration, remoteChargingTransactionDTO.transactionDuration) &&
        Objects.equals(this.address, remoteChargingTransactionDTO.address) &&
        Objects.equals(this.stationLocation, remoteChargingTransactionDTO.stationLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionedData, idTag, empSessionId, csoSessionId, authorizationStatus, transactionInfo, chargingInfo, roamingInfo, plausibility, evseId, empId, externalChargingStationId, status, cardNumber, customerNumber, operatorId, bpRoamingContractId, externalSessionId, duration, transactionDuration, address, stationLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteChargingTransactionDTO {\n");
    
    sb.append("    versionedData: ").append(toIndentedString(versionedData)).append("\n");
    sb.append("    idTag: ").append(toIndentedString(idTag)).append("\n");
    sb.append("    empSessionId: ").append(toIndentedString(empSessionId)).append("\n");
    sb.append("    csoSessionId: ").append(toIndentedString(csoSessionId)).append("\n");
    sb.append("    authorizationStatus: ").append(toIndentedString(authorizationStatus)).append("\n");
    sb.append("    transactionInfo: ").append(toIndentedString(transactionInfo)).append("\n");
    sb.append("    chargingInfo: ").append(toIndentedString(chargingInfo)).append("\n");
    sb.append("    roamingInfo: ").append(toIndentedString(roamingInfo)).append("\n");
    sb.append("    plausibility: ").append(toIndentedString(plausibility)).append("\n");
    sb.append("    evseId: ").append(toIndentedString(evseId)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    externalChargingStationId: ").append(toIndentedString(externalChargingStationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    bpRoamingContractId: ").append(toIndentedString(bpRoamingContractId)).append("\n");
    sb.append("    externalSessionId: ").append(toIndentedString(externalSessionId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    transactionDuration: ").append(toIndentedString(transactionDuration)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    stationLocation: ").append(toIndentedString(stationLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

