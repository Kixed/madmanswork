/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RemoteChargingTransactionRequestDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class RemoteChargingTransactionRequestDTO {
  @SerializedName("evseId")
  private String evseId = null;

  @SerializedName("empId")
  private Long empId = null;

  @SerializedName("idTag")
  private String idTag = null;

  @SerializedName("csoSessionId")
  private String csoSessionId = null;

  @SerializedName("empSessionId")
  private String empSessionId = null;

  @SerializedName("externalChargingStationId")
  private String externalChargingStationId = null;

  @SerializedName("operatorId")
  private String operatorId = null;

  @SerializedName("bpRoamingContractId")
  private Long bpRoamingContractId = null;

  /**
   * Gets or Sets authorizationStatus
   */
  @JsonAdapter(AuthorizationStatusEnum.Adapter.class)
  public enum AuthorizationStatusEnum {
    ACCEPTED("ACCEPTED"),
    
    BLOCKED("BLOCKED"),
    
    EXPIRED("EXPIRED"),
    
    INVALID("INVALID"),
    
    CONCURRENT_TX("CONCURRENT_TX");

    private String value;

    AuthorizationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthorizationStatusEnum fromValue(String text) {
      for (AuthorizationStatusEnum b : AuthorizationStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthorizationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthorizationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthorizationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthorizationStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authorizationStatus")
  private AuthorizationStatusEnum authorizationStatus = null;

  public RemoteChargingTransactionRequestDTO evseId(String evseId) {
    this.evseId = evseId;
    return this;
  }

   /**
   * Official EVSE Id of the charge point / connector to start the transaction
   * @return evseId
  **/
  @ApiModelProperty(required = true, value = "Official EVSE Id of the charge point / connector to start the transaction")
  public String getEvseId() {
    return evseId;
  }

  public void setEvseId(String evseId) {
    this.evseId = evseId;
  }

  public RemoteChargingTransactionRequestDTO empId(Long empId) {
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getEmpId() {
    return empId;
  }

  public void setEmpId(Long empId) {
    this.empId = empId;
  }

  public RemoteChargingTransactionRequestDTO idTag(String idTag) {
    this.idTag = idTag;
    return this;
  }

   /**
   * Id tag the EMP customer
   * @return idTag
  **/
  @ApiModelProperty(required = true, value = "Id tag the EMP customer")
  public String getIdTag() {
    return idTag;
  }

  public void setIdTag(String idTag) {
    this.idTag = idTag;
  }

  public RemoteChargingTransactionRequestDTO csoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
    return this;
  }

   /**
   * Get csoSessionId
   * @return csoSessionId
  **/
  @ApiModelProperty(value = "")
  public String getCsoSessionId() {
    return csoSessionId;
  }

  public void setCsoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
  }

  public RemoteChargingTransactionRequestDTO empSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
    return this;
  }

   /**
   * Get empSessionId
   * @return empSessionId
  **/
  @ApiModelProperty(value = "")
  public String getEmpSessionId() {
    return empSessionId;
  }

  public void setEmpSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
  }

  public RemoteChargingTransactionRequestDTO externalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
    return this;
  }

   /**
   * Get externalChargingStationId
   * @return externalChargingStationId
  **/
  @ApiModelProperty(value = "")
  public String getExternalChargingStationId() {
    return externalChargingStationId;
  }

  public void setExternalChargingStationId(String externalChargingStationId) {
    this.externalChargingStationId = externalChargingStationId;
  }

  public RemoteChargingTransactionRequestDTO operatorId(String operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(String operatorId) {
    this.operatorId = operatorId;
  }

  public RemoteChargingTransactionRequestDTO bpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
    return this;
  }

   /**
   * Get bpRoamingContractId
   * @return bpRoamingContractId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBpRoamingContractId() {
    return bpRoamingContractId;
  }

  public void setBpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
  }

  public RemoteChargingTransactionRequestDTO authorizationStatus(AuthorizationStatusEnum authorizationStatus) {
    this.authorizationStatus = authorizationStatus;
    return this;
  }

   /**
   * Get authorizationStatus
   * @return authorizationStatus
  **/
  @ApiModelProperty(required = true, value = "")
  public AuthorizationStatusEnum getAuthorizationStatus() {
    return authorizationStatus;
  }

  public void setAuthorizationStatus(AuthorizationStatusEnum authorizationStatus) {
    this.authorizationStatus = authorizationStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteChargingTransactionRequestDTO remoteChargingTransactionRequestDTO = (RemoteChargingTransactionRequestDTO) o;
    return Objects.equals(this.evseId, remoteChargingTransactionRequestDTO.evseId) &&
        Objects.equals(this.empId, remoteChargingTransactionRequestDTO.empId) &&
        Objects.equals(this.idTag, remoteChargingTransactionRequestDTO.idTag) &&
        Objects.equals(this.csoSessionId, remoteChargingTransactionRequestDTO.csoSessionId) &&
        Objects.equals(this.empSessionId, remoteChargingTransactionRequestDTO.empSessionId) &&
        Objects.equals(this.externalChargingStationId, remoteChargingTransactionRequestDTO.externalChargingStationId) &&
        Objects.equals(this.operatorId, remoteChargingTransactionRequestDTO.operatorId) &&
        Objects.equals(this.bpRoamingContractId, remoteChargingTransactionRequestDTO.bpRoamingContractId) &&
        Objects.equals(this.authorizationStatus, remoteChargingTransactionRequestDTO.authorizationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evseId, empId, idTag, csoSessionId, empSessionId, externalChargingStationId, operatorId, bpRoamingContractId, authorizationStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteChargingTransactionRequestDTO {\n");
    
    sb.append("    evseId: ").append(toIndentedString(evseId)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    idTag: ").append(toIndentedString(idTag)).append("\n");
    sb.append("    csoSessionId: ").append(toIndentedString(csoSessionId)).append("\n");
    sb.append("    empSessionId: ").append(toIndentedString(empSessionId)).append("\n");
    sb.append("    externalChargingStationId: ").append(toIndentedString(externalChargingStationId)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    bpRoamingContractId: ").append(toIndentedString(bpRoamingContractId)).append("\n");
    sb.append("    authorizationStatus: ").append(toIndentedString(authorizationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

