/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RoamingAcknowledgementDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class RoamingAcknowledgementDTO {
  @SerializedName("csoSessionId")
  private String csoSessionId = null;

  @SerializedName("empSessionId")
  private String empSessionId = null;

  @SerializedName("sessionId")
  private String sessionId = null;

  @SerializedName("result")
  private Boolean result = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  /**
   * Gets or Sets transactionStatus
   */
  @JsonAdapter(TransactionStatusEnum.Adapter.class)
  public enum TransactionStatusEnum {
    PENDING("PENDING"),
    
    OPEN("OPEN"),
    
    FINISHED("FINISHED"),
    
    FAILURE("FAILURE");

    private String value;

    TransactionStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransactionStatusEnum fromValue(String text) {
      for (TransactionStatusEnum b : TransactionStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TransactionStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransactionStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransactionStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TransactionStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("transactionStatus")
  private TransactionStatusEnum transactionStatus = null;

  public RoamingAcknowledgementDTO csoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
    return this;
  }

   /**
   * Get csoSessionId
   * @return csoSessionId
  **/
  @ApiModelProperty(value = "")
  public String getCsoSessionId() {
    return csoSessionId;
  }

  public void setCsoSessionId(String csoSessionId) {
    this.csoSessionId = csoSessionId;
  }

  public RoamingAcknowledgementDTO empSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
    return this;
  }

   /**
   * Get empSessionId
   * @return empSessionId
  **/
  @ApiModelProperty(value = "")
  public String getEmpSessionId() {
    return empSessionId;
  }

  public void setEmpSessionId(String empSessionId) {
    this.empSessionId = empSessionId;
  }

  public RoamingAcknowledgementDTO sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Get sessionId
   * @return sessionId
  **/
  @ApiModelProperty(value = "")
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }

  public RoamingAcknowledgementDTO result(Boolean result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(value = "")
  public Boolean isResult() {
    return result;
  }

  public void setResult(Boolean result) {
    this.result = result;
  }

  public RoamingAcknowledgementDTO errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @ApiModelProperty(value = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public RoamingAcknowledgementDTO transactionStatus(TransactionStatusEnum transactionStatus) {
    this.transactionStatus = transactionStatus;
    return this;
  }

   /**
   * Get transactionStatus
   * @return transactionStatus
  **/
  @ApiModelProperty(value = "")
  public TransactionStatusEnum getTransactionStatus() {
    return transactionStatus;
  }

  public void setTransactionStatus(TransactionStatusEnum transactionStatus) {
    this.transactionStatus = transactionStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoamingAcknowledgementDTO roamingAcknowledgementDTO = (RoamingAcknowledgementDTO) o;
    return Objects.equals(this.csoSessionId, roamingAcknowledgementDTO.csoSessionId) &&
        Objects.equals(this.empSessionId, roamingAcknowledgementDTO.empSessionId) &&
        Objects.equals(this.sessionId, roamingAcknowledgementDTO.sessionId) &&
        Objects.equals(this.result, roamingAcknowledgementDTO.result) &&
        Objects.equals(this.errorMessage, roamingAcknowledgementDTO.errorMessage) &&
        Objects.equals(this.transactionStatus, roamingAcknowledgementDTO.transactionStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(csoSessionId, empSessionId, sessionId, result, errorMessage, transactionStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoamingAcknowledgementDTO {\n");
    
    sb.append("    csoSessionId: ").append(toIndentedString(csoSessionId)).append("\n");
    sb.append("    empSessionId: ").append(toIndentedString(empSessionId)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    transactionStatus: ").append(toIndentedString(transactionStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

