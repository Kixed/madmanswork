/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.VersionedData;
import java.io.IOException;

/**
 * RoamingEmpContractSaveDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class RoamingEmpContractSaveDTO {
  @SerializedName("versionedData")
  private VersionedData versionedData = null;

  @SerializedName("empId")
  private Long empId = null;

  @SerializedName("remoteCsoId")
  private Long remoteCsoId = null;

  @SerializedName("platformTypeId")
  private Long platformTypeId = null;

  @SerializedName("contractNumber")
  private String contractNumber = null;

  public RoamingEmpContractSaveDTO versionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
    return this;
  }

   /**
   * Get versionedData
   * @return versionedData
  **/
  @ApiModelProperty(value = "")
  public VersionedData getVersionedData() {
    return versionedData;
  }

  public void setVersionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
  }

  public RoamingEmpContractSaveDTO empId(Long empId) {
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getEmpId() {
    return empId;
  }

  public void setEmpId(Long empId) {
    this.empId = empId;
  }

  public RoamingEmpContractSaveDTO remoteCsoId(Long remoteCsoId) {
    this.remoteCsoId = remoteCsoId;
    return this;
  }

   /**
   * Get remoteCsoId
   * @return remoteCsoId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getRemoteCsoId() {
    return remoteCsoId;
  }

  public void setRemoteCsoId(Long remoteCsoId) {
    this.remoteCsoId = remoteCsoId;
  }

  public RoamingEmpContractSaveDTO platformTypeId(Long platformTypeId) {
    this.platformTypeId = platformTypeId;
    return this;
  }

   /**
   * Get platformTypeId
   * @return platformTypeId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getPlatformTypeId() {
    return platformTypeId;
  }

  public void setPlatformTypeId(Long platformTypeId) {
    this.platformTypeId = platformTypeId;
  }

  public RoamingEmpContractSaveDTO contractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
    return this;
  }

   /**
   * Get contractNumber
   * @return contractNumber
  **/
  @ApiModelProperty(required = true, value = "")
  public String getContractNumber() {
    return contractNumber;
  }

  public void setContractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoamingEmpContractSaveDTO roamingEmpContractSaveDTO = (RoamingEmpContractSaveDTO) o;
    return Objects.equals(this.versionedData, roamingEmpContractSaveDTO.versionedData) &&
        Objects.equals(this.empId, roamingEmpContractSaveDTO.empId) &&
        Objects.equals(this.remoteCsoId, roamingEmpContractSaveDTO.remoteCsoId) &&
        Objects.equals(this.platformTypeId, roamingEmpContractSaveDTO.platformTypeId) &&
        Objects.equals(this.contractNumber, roamingEmpContractSaveDTO.contractNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionedData, empId, remoteCsoId, platformTypeId, contractNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoamingEmpContractSaveDTO {\n");
    
    sb.append("    versionedData: ").append(toIndentedString(versionedData)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    remoteCsoId: ").append(toIndentedString(remoteCsoId)).append("\n");
    sb.append("    platformTypeId: ").append(toIndentedString(platformTypeId)).append("\n");
    sb.append("    contractNumber: ").append(toIndentedString(contractNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

