/*
 * Roaming REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.RoamingMessagePropertiesDTO;
import io.swagger.client.model.VersionedData;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * RoamingMessageDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:37:18.317+01:00")
public class RoamingMessageDTO {
  @SerializedName("versionedData")
  private VersionedData versionedData = null;

  @SerializedName("uniqueMessageId")
  private String uniqueMessageId = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets direction
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    INBOUND("INBOUND"),
    
    OUTBOUND("OUTBOUND");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DirectionEnum fromValue(String text) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("direction")
  private DirectionEnum direction = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    REQUEST("REQUEST"),
    
    RESPONSE("RESPONSE"),
    
    ERROR("ERROR");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets platform
   */
  @JsonAdapter(PlatformEnum.Adapter.class)
  public enum PlatformEnum {
    DIRECT("DIRECT"),
    
    DIRECT_LOCAL("DIRECT_LOCAL"),
    
    HUBJECT("HUBJECT");

    private String value;

    PlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlatformEnum fromValue(String text) {
      for (PlatformEnum b : PlatformEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PlatformEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("platform")
  private PlatformEnum platform = null;

  @SerializedName("standardRaw")
  private Object standardRaw = null;

  @SerializedName("raw")
  private Object raw = null;

  @SerializedName("contractNumber")
  private String contractNumber = null;

  @SerializedName("roamingPartnerName")
  private String roamingPartnerName = null;

  @SerializedName("properties")
  private RoamingMessagePropertiesDTO properties = null;

  public RoamingMessageDTO versionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
    return this;
  }

   /**
   * Get versionedData
   * @return versionedData
  **/
  @ApiModelProperty(value = "")
  public VersionedData getVersionedData() {
    return versionedData;
  }

  public void setVersionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
  }

  public RoamingMessageDTO uniqueMessageId(String uniqueMessageId) {
    this.uniqueMessageId = uniqueMessageId;
    return this;
  }

   /**
   * Get uniqueMessageId
   * @return uniqueMessageId
  **/
  @ApiModelProperty(value = "")
  public String getUniqueMessageId() {
    return uniqueMessageId;
  }

  public void setUniqueMessageId(String uniqueMessageId) {
    this.uniqueMessageId = uniqueMessageId;
  }

  public RoamingMessageDTO createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public RoamingMessageDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RoamingMessageDTO direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(value = "")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public RoamingMessageDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public RoamingMessageDTO platform(PlatformEnum platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @ApiModelProperty(value = "")
  public PlatformEnum getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformEnum platform) {
    this.platform = platform;
  }

  public RoamingMessageDTO standardRaw(Object standardRaw) {
    this.standardRaw = standardRaw;
    return this;
  }

   /**
   * Get standardRaw
   * @return standardRaw
  **/
  @ApiModelProperty(value = "")
  public Object getStandardRaw() {
    return standardRaw;
  }

  public void setStandardRaw(Object standardRaw) {
    this.standardRaw = standardRaw;
  }

  public RoamingMessageDTO raw(Object raw) {
    this.raw = raw;
    return this;
  }

   /**
   * Get raw
   * @return raw
  **/
  @ApiModelProperty(value = "")
  public Object getRaw() {
    return raw;
  }

  public void setRaw(Object raw) {
    this.raw = raw;
  }

  public RoamingMessageDTO contractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
    return this;
  }

   /**
   * Get contractNumber
   * @return contractNumber
  **/
  @ApiModelProperty(value = "")
  public String getContractNumber() {
    return contractNumber;
  }

  public void setContractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
  }

  public RoamingMessageDTO roamingPartnerName(String roamingPartnerName) {
    this.roamingPartnerName = roamingPartnerName;
    return this;
  }

   /**
   * Get roamingPartnerName
   * @return roamingPartnerName
  **/
  @ApiModelProperty(value = "")
  public String getRoamingPartnerName() {
    return roamingPartnerName;
  }

  public void setRoamingPartnerName(String roamingPartnerName) {
    this.roamingPartnerName = roamingPartnerName;
  }

  public RoamingMessageDTO properties(RoamingMessagePropertiesDTO properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public RoamingMessagePropertiesDTO getProperties() {
    return properties;
  }

  public void setProperties(RoamingMessagePropertiesDTO properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoamingMessageDTO roamingMessageDTO = (RoamingMessageDTO) o;
    return Objects.equals(this.versionedData, roamingMessageDTO.versionedData) &&
        Objects.equals(this.uniqueMessageId, roamingMessageDTO.uniqueMessageId) &&
        Objects.equals(this.createdOn, roamingMessageDTO.createdOn) &&
        Objects.equals(this.name, roamingMessageDTO.name) &&
        Objects.equals(this.direction, roamingMessageDTO.direction) &&
        Objects.equals(this.type, roamingMessageDTO.type) &&
        Objects.equals(this.platform, roamingMessageDTO.platform) &&
        Objects.equals(this.standardRaw, roamingMessageDTO.standardRaw) &&
        Objects.equals(this.raw, roamingMessageDTO.raw) &&
        Objects.equals(this.contractNumber, roamingMessageDTO.contractNumber) &&
        Objects.equals(this.roamingPartnerName, roamingMessageDTO.roamingPartnerName) &&
        Objects.equals(this.properties, roamingMessageDTO.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionedData, uniqueMessageId, createdOn, name, direction, type, platform, standardRaw, raw, contractNumber, roamingPartnerName, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoamingMessageDTO {\n");
    
    sb.append("    versionedData: ").append(toIndentedString(versionedData)).append("\n");
    sb.append("    uniqueMessageId: ").append(toIndentedString(uniqueMessageId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    standardRaw: ").append(toIndentedString(standardRaw)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    contractNumber: ").append(toIndentedString(contractNumber)).append("\n");
    sb.append("    roamingPartnerName: ").append(toIndentedString(roamingPartnerName)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

