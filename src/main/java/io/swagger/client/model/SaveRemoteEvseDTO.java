/*
 * CS Management EMP REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.RemoteChargingStationDataDTO;
import io.swagger.client.model.RemoteEvseDataDTO;
import io.swagger.client.model.VersionedData;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * SaveRemoteEvseDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:09:13.919+01:00")
public class SaveRemoteEvseDTO {
  @SerializedName("evseData")
  private RemoteEvseDataDTO evseData = null;

  @SerializedName("versionedData")
  private VersionedData versionedData = null;

  @SerializedName("chargingStationId")
  private String chargingStationId = null;

  @SerializedName("operatorId")
  private String operatorId = null;

  @SerializedName("evseId")
  private String evseId = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    AVAILABLE("AVAILABLE"),
    
    PREPARING("PREPARING"),
    
    CHARGING("CHARGING"),
    
    SUSPENDED_EVSE("SUSPENDED_EVSE"),
    
    SUSPENDED_EV("SUSPENDED_EV"),
    
    FINISHING("FINISHING"),
    
    OCCUPIED("OCCUPIED"),
    
    RESERVED("RESERVED"),
    
    UNAVAILABLE("UNAVAILABLE"),
    
    UNKNOWN("UNKNOWN"),
    
    OFFLINE("OFFLINE"),
    
    FAULTED("FAULTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("lastUpdate")
  private OffsetDateTime lastUpdate = null;

  @SerializedName("empId")
  private Long empId = null;

  @SerializedName("bpRoamingContractId")
  private Long bpRoamingContractId = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("changedOn")
  private OffsetDateTime changedOn = null;

  /**
   * Gets or Sets source
   */
  @JsonAdapter(SourceEnum.Adapter.class)
  public enum SourceEnum {
    DIRECT("DIRECT"),
    
    DIRECT_LOCAL("DIRECT_LOCAL"),
    
    HUBJECT("HUBJECT");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String text) {
      for (SourceEnum b : SourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("source")
  private SourceEnum source = null;

  @SerializedName("chargePointVendor")
  private String chargePointVendor = null;

  @SerializedName("operatorName")
  private String operatorName = null;

  @SerializedName("chargePointModel")
  private String chargePointModel = null;

  @SerializedName("chargingStationData")
  private RemoteChargingStationDataDTO chargingStationData = null;

  public SaveRemoteEvseDTO evseData(RemoteEvseDataDTO evseData) {
    this.evseData = evseData;
    return this;
  }

   /**
   * Get evseData
   * @return evseData
  **/
  @ApiModelProperty(required = true, value = "")
  public RemoteEvseDataDTO getEvseData() {
    return evseData;
  }

  public void setEvseData(RemoteEvseDataDTO evseData) {
    this.evseData = evseData;
  }

  public SaveRemoteEvseDTO versionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
    return this;
  }

   /**
   * Get versionedData
   * @return versionedData
  **/
  @ApiModelProperty(value = "")
  public VersionedData getVersionedData() {
    return versionedData;
  }

  public void setVersionedData(VersionedData versionedData) {
    this.versionedData = versionedData;
  }

  public SaveRemoteEvseDTO chargingStationId(String chargingStationId) {
    this.chargingStationId = chargingStationId;
    return this;
  }

   /**
   * Get chargingStationId
   * @return chargingStationId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getChargingStationId() {
    return chargingStationId;
  }

  public void setChargingStationId(String chargingStationId) {
    this.chargingStationId = chargingStationId;
  }

  public SaveRemoteEvseDTO operatorId(String operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(String operatorId) {
    this.operatorId = operatorId;
  }

  public SaveRemoteEvseDTO evseId(String evseId) {
    this.evseId = evseId;
    return this;
  }

   /**
   * Get evseId
   * @return evseId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEvseId() {
    return evseId;
  }

  public void setEvseId(String evseId) {
    this.evseId = evseId;
  }

  public SaveRemoteEvseDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SaveRemoteEvseDTO lastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * Get lastUpdate
   * @return lastUpdate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }

  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public SaveRemoteEvseDTO empId(Long empId) {
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getEmpId() {
    return empId;
  }

  public void setEmpId(Long empId) {
    this.empId = empId;
  }

  public SaveRemoteEvseDTO bpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
    return this;
  }

   /**
   * Get bpRoamingContractId
   * @return bpRoamingContractId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBpRoamingContractId() {
    return bpRoamingContractId;
  }

  public void setBpRoamingContractId(Long bpRoamingContractId) {
    this.bpRoamingContractId = bpRoamingContractId;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

  public SaveRemoteEvseDTO source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(required = true, value = "")
  public SourceEnum getSource() {
    return source;
  }

  public void setSource(SourceEnum source) {
    this.source = source;
  }

  public SaveRemoteEvseDTO chargePointVendor(String chargePointVendor) {
    this.chargePointVendor = chargePointVendor;
    return this;
  }

   /**
   * Get chargePointVendor
   * @return chargePointVendor
  **/
  @ApiModelProperty(value = "")
  public String getChargePointVendor() {
    return chargePointVendor;
  }

  public void setChargePointVendor(String chargePointVendor) {
    this.chargePointVendor = chargePointVendor;
  }

  public SaveRemoteEvseDTO operatorName(String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * Get operatorName
   * @return operatorName
  **/
  @ApiModelProperty(value = "")
  public String getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(String operatorName) {
    this.operatorName = operatorName;
  }

  public SaveRemoteEvseDTO chargePointModel(String chargePointModel) {
    this.chargePointModel = chargePointModel;
    return this;
  }

   /**
   * Get chargePointModel
   * @return chargePointModel
  **/
  @ApiModelProperty(value = "")
  public String getChargePointModel() {
    return chargePointModel;
  }

  public void setChargePointModel(String chargePointModel) {
    this.chargePointModel = chargePointModel;
  }

  public SaveRemoteEvseDTO chargingStationData(RemoteChargingStationDataDTO chargingStationData) {
    this.chargingStationData = chargingStationData;
    return this;
  }

   /**
   * Get chargingStationData
   * @return chargingStationData
  **/
  @ApiModelProperty(required = true, value = "")
  public RemoteChargingStationDataDTO getChargingStationData() {
    return chargingStationData;
  }

  public void setChargingStationData(RemoteChargingStationDataDTO chargingStationData) {
    this.chargingStationData = chargingStationData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveRemoteEvseDTO saveRemoteEvseDTO = (SaveRemoteEvseDTO) o;
    return Objects.equals(this.evseData, saveRemoteEvseDTO.evseData) &&
        Objects.equals(this.versionedData, saveRemoteEvseDTO.versionedData) &&
        Objects.equals(this.chargingStationId, saveRemoteEvseDTO.chargingStationId) &&
        Objects.equals(this.operatorId, saveRemoteEvseDTO.operatorId) &&
        Objects.equals(this.evseId, saveRemoteEvseDTO.evseId) &&
        Objects.equals(this.status, saveRemoteEvseDTO.status) &&
        Objects.equals(this.lastUpdate, saveRemoteEvseDTO.lastUpdate) &&
        Objects.equals(this.empId, saveRemoteEvseDTO.empId) &&
        Objects.equals(this.bpRoamingContractId, saveRemoteEvseDTO.bpRoamingContractId) &&
        Objects.equals(this.createdOn, saveRemoteEvseDTO.createdOn) &&
        Objects.equals(this.changedOn, saveRemoteEvseDTO.changedOn) &&
        Objects.equals(this.source, saveRemoteEvseDTO.source) &&
        Objects.equals(this.chargePointVendor, saveRemoteEvseDTO.chargePointVendor) &&
        Objects.equals(this.operatorName, saveRemoteEvseDTO.operatorName) &&
        Objects.equals(this.chargePointModel, saveRemoteEvseDTO.chargePointModel) &&
        Objects.equals(this.chargingStationData, saveRemoteEvseDTO.chargingStationData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evseData, versionedData, chargingStationId, operatorId, evseId, status, lastUpdate, empId, bpRoamingContractId, createdOn, changedOn, source, chargePointVendor, operatorName, chargePointModel, chargingStationData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveRemoteEvseDTO {\n");
    
    sb.append("    evseData: ").append(toIndentedString(evseData)).append("\n");
    sb.append("    versionedData: ").append(toIndentedString(versionedData)).append("\n");
    sb.append("    chargingStationId: ").append(toIndentedString(chargingStationId)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    evseId: ").append(toIndentedString(evseId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    bpRoamingContractId: ").append(toIndentedString(bpRoamingContractId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    chargePointVendor: ").append(toIndentedString(chargePointVendor)).append("\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    chargePointModel: ").append(toIndentedString(chargePointModel)).append("\n");
    sb.append("    chargingStationData: ").append(toIndentedString(chargingStationData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

