/*
 * CS Communicator REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AbstractMessageDTO;
import io.swagger.client.model.AuthorisationDataDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * SendLocalListRequestDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:06:01.588+01:00")
public class SendLocalListRequestDTO extends AbstractMessageDTO {
  @SerializedName("remoteAddress")
  private String remoteAddress = null;

  @SerializedName("centralSystemRequestedAt")
  private OffsetDateTime centralSystemRequestedAt = null;

  /**
   * Gets or Sets updateType
   */
  @JsonAdapter(UpdateTypeEnum.Adapter.class)
  public enum UpdateTypeEnum {
    DIFFERENTIAL("DIFFERENTIAL"),
    
    FULL("FULL");

    private String value;

    UpdateTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UpdateTypeEnum fromValue(String text) {
      for (UpdateTypeEnum b : UpdateTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<UpdateTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UpdateTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UpdateTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UpdateTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("updateType")
  private UpdateTypeEnum updateType = null;

  @SerializedName("listVersion")
  private Integer listVersion = null;

  @SerializedName("localAuthorisationList")
  private List<AuthorisationDataDTO> localAuthorisationList = new ArrayList<AuthorisationDataDTO>();

  @SerializedName("hash")
  private String hash = null;

  public SendLocalListRequestDTO remoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
    return this;
  }

   /**
   * Get remoteAddress
   * @return remoteAddress
  **/
  @ApiModelProperty(value = "")
  public String getRemoteAddress() {
    return remoteAddress;
  }

  public void setRemoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
  }

  public SendLocalListRequestDTO centralSystemRequestedAt(OffsetDateTime centralSystemRequestedAt) {
    this.centralSystemRequestedAt = centralSystemRequestedAt;
    return this;
  }

   /**
   * Get centralSystemRequestedAt
   * @return centralSystemRequestedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCentralSystemRequestedAt() {
    return centralSystemRequestedAt;
  }

  public void setCentralSystemRequestedAt(OffsetDateTime centralSystemRequestedAt) {
    this.centralSystemRequestedAt = centralSystemRequestedAt;
  }

  public SendLocalListRequestDTO updateType(UpdateTypeEnum updateType) {
    this.updateType = updateType;
    return this;
  }

   /**
   * Get updateType
   * @return updateType
  **/
  @ApiModelProperty(required = true, value = "")
  public UpdateTypeEnum getUpdateType() {
    return updateType;
  }

  public void setUpdateType(UpdateTypeEnum updateType) {
    this.updateType = updateType;
  }

  public SendLocalListRequestDTO listVersion(Integer listVersion) {
    this.listVersion = listVersion;
    return this;
  }

   /**
   * Get listVersion
   * @return listVersion
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getListVersion() {
    return listVersion;
  }

  public void setListVersion(Integer listVersion) {
    this.listVersion = listVersion;
  }

  public SendLocalListRequestDTO localAuthorisationList(List<AuthorisationDataDTO> localAuthorisationList) {
    this.localAuthorisationList = localAuthorisationList;
    return this;
  }

  public SendLocalListRequestDTO addLocalAuthorisationListItem(AuthorisationDataDTO localAuthorisationListItem) {
    this.localAuthorisationList.add(localAuthorisationListItem);
    return this;
  }

   /**
   * Get localAuthorisationList
   * @return localAuthorisationList
  **/
  @ApiModelProperty(required = true, value = "")
  public List<AuthorisationDataDTO> getLocalAuthorisationList() {
    return localAuthorisationList;
  }

  public void setLocalAuthorisationList(List<AuthorisationDataDTO> localAuthorisationList) {
    this.localAuthorisationList = localAuthorisationList;
  }

  public SendLocalListRequestDTO hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @ApiModelProperty(value = "")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendLocalListRequestDTO sendLocalListRequestDTO = (SendLocalListRequestDTO) o;
    return Objects.equals(this.remoteAddress, sendLocalListRequestDTO.remoteAddress) &&
        Objects.equals(this.centralSystemRequestedAt, sendLocalListRequestDTO.centralSystemRequestedAt) &&
        Objects.equals(this.updateType, sendLocalListRequestDTO.updateType) &&
        Objects.equals(this.listVersion, sendLocalListRequestDTO.listVersion) &&
        Objects.equals(this.localAuthorisationList, sendLocalListRequestDTO.localAuthorisationList) &&
        Objects.equals(this.hash, sendLocalListRequestDTO.hash) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remoteAddress, centralSystemRequestedAt, updateType, listVersion, localAuthorisationList, hash, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendLocalListRequestDTO {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("    centralSystemRequestedAt: ").append(toIndentedString(centralSystemRequestedAt)).append("\n");
    sb.append("    updateType: ").append(toIndentedString(updateType)).append("\n");
    sb.append("    listVersion: ").append(toIndentedString(listVersion)).append("\n");
    sb.append("    localAuthorisationList: ").append(toIndentedString(localAuthorisationList)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

