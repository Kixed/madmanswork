/*
 * CS Communicator REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * StartInfoDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:06:01.588+01:00")
public class StartInfoDTO {
  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("uniqueMessageId")
  private String uniqueMessageId = null;

  @SerializedName("reservationId")
  private Integer reservationId = null;

  @SerializedName("meterWattHours")
  private Integer meterWattHours = null;

  public StartInfoDTO timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public StartInfoDTO uniqueMessageId(String uniqueMessageId) {
    this.uniqueMessageId = uniqueMessageId;
    return this;
  }

   /**
   * Get uniqueMessageId
   * @return uniqueMessageId
  **/
  @ApiModelProperty(value = "")
  public String getUniqueMessageId() {
    return uniqueMessageId;
  }

  public void setUniqueMessageId(String uniqueMessageId) {
    this.uniqueMessageId = uniqueMessageId;
  }

  public StartInfoDTO reservationId(Integer reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * Get reservationId
   * @return reservationId
  **/
  @ApiModelProperty(value = "")
  public Integer getReservationId() {
    return reservationId;
  }

  public void setReservationId(Integer reservationId) {
    this.reservationId = reservationId;
  }

  public StartInfoDTO meterWattHours(Integer meterWattHours) {
    this.meterWattHours = meterWattHours;
    return this;
  }

   /**
   * Get meterWattHours
   * @return meterWattHours
  **/
  @ApiModelProperty(value = "")
  public Integer getMeterWattHours() {
    return meterWattHours;
  }

  public void setMeterWattHours(Integer meterWattHours) {
    this.meterWattHours = meterWattHours;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartInfoDTO startInfoDTO = (StartInfoDTO) o;
    return Objects.equals(this.timestamp, startInfoDTO.timestamp) &&
        Objects.equals(this.uniqueMessageId, startInfoDTO.uniqueMessageId) &&
        Objects.equals(this.reservationId, startInfoDTO.reservationId) &&
        Objects.equals(this.meterWattHours, startInfoDTO.meterWattHours);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, uniqueMessageId, reservationId, meterWattHours);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartInfoDTO {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    uniqueMessageId: ").append(toIndentedString(uniqueMessageId)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    meterWattHours: ").append(toIndentedString(meterWattHours)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

