/*
 * CS Communicator REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AbstractMessageDTO;
import io.swagger.client.model.TransactionDatumDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * StopTransactionRequestDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T19:06:01.588+01:00")
public class StopTransactionRequestDTO extends AbstractMessageDTO {
  @SerializedName("remoteAddress")
  private String remoteAddress = null;

  @SerializedName("centralSystemRequestedAt")
  private OffsetDateTime centralSystemRequestedAt = null;

  @SerializedName("idTag")
  private String idTag = null;

  @SerializedName("meterStop")
  private Integer meterStop = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("transactionId")
  private Integer transactionId = null;

  /**
   * Default reason is Local
   */
  @JsonAdapter(ReasonEnum.Adapter.class)
  public enum ReasonEnum {
    EMERGENCY_STOP("EMERGENCY_STOP"),
    
    EV_DISCONNECTED("EV_DISCONNECTED"),
    
    HARD_RESET("HARD_RESET"),
    
    LOCAL("LOCAL"),
    
    OTHER("OTHER"),
    
    POWER_LOSS("POWER_LOSS"),
    
    REBOOT("REBOOT"),
    
    REMOTE("REMOTE"),
    
    SOFT_RESET("SOFT_RESET"),
    
    UNLOCK_COMMAND("UNLOCK_COMMAND"),
    
    DE_AUTHORIZED("DE_AUTHORIZED"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReasonEnum fromValue(String text) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ReasonEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("reason")
  private ReasonEnum reason = null;

  @SerializedName("transactionData")
  private List<TransactionDatumDTO> transactionData = null;

  public StopTransactionRequestDTO remoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
    return this;
  }

   /**
   * Get remoteAddress
   * @return remoteAddress
  **/
  @ApiModelProperty(value = "")
  public String getRemoteAddress() {
    return remoteAddress;
  }

  public void setRemoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
  }

  public StopTransactionRequestDTO centralSystemRequestedAt(OffsetDateTime centralSystemRequestedAt) {
    this.centralSystemRequestedAt = centralSystemRequestedAt;
    return this;
  }

   /**
   * Get centralSystemRequestedAt
   * @return centralSystemRequestedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCentralSystemRequestedAt() {
    return centralSystemRequestedAt;
  }

  public void setCentralSystemRequestedAt(OffsetDateTime centralSystemRequestedAt) {
    this.centralSystemRequestedAt = centralSystemRequestedAt;
  }

  public StopTransactionRequestDTO idTag(String idTag) {
    this.idTag = idTag;
    return this;
  }

   /**
   * Get idTag
   * @return idTag
  **/
  @ApiModelProperty(value = "")
  public String getIdTag() {
    return idTag;
  }

  public void setIdTag(String idTag) {
    this.idTag = idTag;
  }

  public StopTransactionRequestDTO meterStop(Integer meterStop) {
    this.meterStop = meterStop;
    return this;
  }

   /**
   * Get meterStop
   * @return meterStop
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getMeterStop() {
    return meterStop;
  }

  public void setMeterStop(Integer meterStop) {
    this.meterStop = meterStop;
  }

  public StopTransactionRequestDTO timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public StopTransactionRequestDTO transactionId(Integer transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(Integer transactionId) {
    this.transactionId = transactionId;
  }

  public StopTransactionRequestDTO reason(ReasonEnum reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Default reason is Local
   * @return reason
  **/
  @ApiModelProperty(required = true, value = "Default reason is Local")
  public ReasonEnum getReason() {
    return reason;
  }

  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }

  public StopTransactionRequestDTO transactionData(List<TransactionDatumDTO> transactionData) {
    this.transactionData = transactionData;
    return this;
  }

  public StopTransactionRequestDTO addTransactionDataItem(TransactionDatumDTO transactionDataItem) {
    if (this.transactionData == null) {
      this.transactionData = new ArrayList<TransactionDatumDTO>();
    }
    this.transactionData.add(transactionDataItem);
    return this;
  }

   /**
   * Get transactionData
   * @return transactionData
  **/
  @ApiModelProperty(value = "")
  public List<TransactionDatumDTO> getTransactionData() {
    return transactionData;
  }

  public void setTransactionData(List<TransactionDatumDTO> transactionData) {
    this.transactionData = transactionData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopTransactionRequestDTO stopTransactionRequestDTO = (StopTransactionRequestDTO) o;
    return Objects.equals(this.remoteAddress, stopTransactionRequestDTO.remoteAddress) &&
        Objects.equals(this.centralSystemRequestedAt, stopTransactionRequestDTO.centralSystemRequestedAt) &&
        Objects.equals(this.idTag, stopTransactionRequestDTO.idTag) &&
        Objects.equals(this.meterStop, stopTransactionRequestDTO.meterStop) &&
        Objects.equals(this.timestamp, stopTransactionRequestDTO.timestamp) &&
        Objects.equals(this.transactionId, stopTransactionRequestDTO.transactionId) &&
        Objects.equals(this.reason, stopTransactionRequestDTO.reason) &&
        Objects.equals(this.transactionData, stopTransactionRequestDTO.transactionData) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remoteAddress, centralSystemRequestedAt, idTag, meterStop, timestamp, transactionId, reason, transactionData, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopTransactionRequestDTO {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("    centralSystemRequestedAt: ").append(toIndentedString(centralSystemRequestedAt)).append("\n");
    sb.append("    idTag: ").append(toIndentedString(idTag)).append("\n");
    sb.append("    meterStop: ").append(toIndentedString(meterStop)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    transactionData: ").append(toIndentedString(transactionData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

