/*
 * Business Partner REST API
 * ## Authentication options  ### OAuth2 / OpenID Connect  The supported authentication method is OpenID Connect via Keycloak. For testing APIs via Swaggerhub or Swagger UI, please use **client_id** `swagger`.  When developing applications against this API, a separate client application must be registered in Keycloak.  ### X-Token header authentication  Internal use only, deprecated. The core services use these authentication headers for system account based requests.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AbstractUserDTO;
import io.swagger.client.model.LanguageDTO;
import io.swagger.client.model.PermissionNodeCoreDTO;
import io.swagger.client.model.PersonSimpleDTO;
import io.swagger.client.model.UserGroupObjectDTO;
import io.swagger.client.model.UserInformationDTO;
import io.swagger.client.model.UserPasswordDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * UserScreenDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T18:44:40.010+01:00")
public class UserScreenDTO {
  @SerializedName("userData")
  private AbstractUserDTO userData = null;

  @SerializedName("personData")
  private PersonSimpleDTO personData = null;

  @SerializedName("password")
  private UserPasswordDTO password = null;

  @SerializedName("managerId")
  private Long managerId = null;

  @SerializedName("language")
  private LanguageDTO language = null;

  @SerializedName("substitute")
  private UserGroupObjectDTO substitute = null;

  @SerializedName("userInformation")
  private UserInformationDTO userInformation = null;

  @SerializedName("allowedFeatures")
  private List<PermissionNodeCoreDTO> allowedFeatures = null;

  public UserScreenDTO userData(AbstractUserDTO userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @ApiModelProperty(value = "")
  public AbstractUserDTO getUserData() {
    return userData;
  }

  public void setUserData(AbstractUserDTO userData) {
    this.userData = userData;
  }

  public UserScreenDTO personData(PersonSimpleDTO personData) {
    this.personData = personData;
    return this;
  }

   /**
   * Get personData
   * @return personData
  **/
  @ApiModelProperty(value = "")
  public PersonSimpleDTO getPersonData() {
    return personData;
  }

  public void setPersonData(PersonSimpleDTO personData) {
    this.personData = personData;
  }

  public UserScreenDTO password(UserPasswordDTO password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public UserPasswordDTO getPassword() {
    return password;
  }

  public void setPassword(UserPasswordDTO password) {
    this.password = password;
  }

  public UserScreenDTO managerId(Long managerId) {
    this.managerId = managerId;
    return this;
  }

   /**
   * Get managerId
   * @return managerId
  **/
  @ApiModelProperty(value = "")
  public Long getManagerId() {
    return managerId;
  }

  public void setManagerId(Long managerId) {
    this.managerId = managerId;
  }

  public UserScreenDTO language(LanguageDTO language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public LanguageDTO getLanguage() {
    return language;
  }

  public void setLanguage(LanguageDTO language) {
    this.language = language;
  }

  public UserScreenDTO substitute(UserGroupObjectDTO substitute) {
    this.substitute = substitute;
    return this;
  }

   /**
   * Get substitute
   * @return substitute
  **/
  @ApiModelProperty(value = "")
  public UserGroupObjectDTO getSubstitute() {
    return substitute;
  }

  public void setSubstitute(UserGroupObjectDTO substitute) {
    this.substitute = substitute;
  }

  public UserScreenDTO userInformation(UserInformationDTO userInformation) {
    this.userInformation = userInformation;
    return this;
  }

   /**
   * Get userInformation
   * @return userInformation
  **/
  @ApiModelProperty(value = "")
  public UserInformationDTO getUserInformation() {
    return userInformation;
  }

  public void setUserInformation(UserInformationDTO userInformation) {
    this.userInformation = userInformation;
  }

  public UserScreenDTO allowedFeatures(List<PermissionNodeCoreDTO> allowedFeatures) {
    this.allowedFeatures = allowedFeatures;
    return this;
  }

  public UserScreenDTO addAllowedFeaturesItem(PermissionNodeCoreDTO allowedFeaturesItem) {
    if (this.allowedFeatures == null) {
      this.allowedFeatures = new ArrayList<PermissionNodeCoreDTO>();
    }
    this.allowedFeatures.add(allowedFeaturesItem);
    return this;
  }

   /**
   * Get allowedFeatures
   * @return allowedFeatures
  **/
  @ApiModelProperty(value = "")
  public List<PermissionNodeCoreDTO> getAllowedFeatures() {
    return allowedFeatures;
  }

  public void setAllowedFeatures(List<PermissionNodeCoreDTO> allowedFeatures) {
    this.allowedFeatures = allowedFeatures;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserScreenDTO userScreenDTO = (UserScreenDTO) o;
    return Objects.equals(this.userData, userScreenDTO.userData) &&
        Objects.equals(this.personData, userScreenDTO.personData) &&
        Objects.equals(this.password, userScreenDTO.password) &&
        Objects.equals(this.managerId, userScreenDTO.managerId) &&
        Objects.equals(this.language, userScreenDTO.language) &&
        Objects.equals(this.substitute, userScreenDTO.substitute) &&
        Objects.equals(this.userInformation, userScreenDTO.userInformation) &&
        Objects.equals(this.allowedFeatures, userScreenDTO.allowedFeatures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userData, personData, password, managerId, language, substitute, userInformation, allowedFeatures);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserScreenDTO {\n");
    
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    personData: ").append(toIndentedString(personData)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    substitute: ").append(toIndentedString(substitute)).append("\n");
    sb.append("    userInformation: ").append(toIndentedString(userInformation)).append("\n");
    sb.append("    allowedFeatures: ").append(toIndentedString(allowedFeatures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

